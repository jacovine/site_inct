[
  {
    "objectID": "blog/index.html",
    "href": "blog/index.html",
    "title": "",
    "section": "",
    "text": "This is the blog page created to centralize and list all the posts.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirst Post\n\n\n\n\n\nPost description for first post\n\n\n\n\n\nMay 22, 2021\n\n\nAlicia\n\n\n\n\n\n\n\n\n\n\n\n\nIntro\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRaça ou cor em São Paulo - uma leitura a partir dos microdados censitários\n\n\n\n\n\nPost description for first post\n\n\n\n\n\nJan 5, 2025\n\n\nNúcleo de Dados\n\n\n\n\n\n\n\n\n\n\n\n\nSecond Post\n\n\n\n\n\nPost description for second post\n\n\n\n\n\nMay 23, 2021\n\n\nAlicia\n\n\n\n\n\n\n\n\n\n\n\n\nThird Blog Post\n\n\n\n\n\nAn example post where the source document is a Jupyter Notebook\n\n\n\n\n\nMay 24, 2021\n\n\nAlicia\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "blog/04-post/Raca_cor_sp.html",
    "href": "blog/04-post/Raca_cor_sp.html",
    "title": "Raça ou cor em São Paulo - uma leitura a partir dos microdados censitários",
    "section": "",
    "text": "O presente texto explorará brevemente como acessar e manipular alguns dados sobre a questão racial na região central do município de São Paulo. Mais especificamente, o foco recairá sobre a distribuição espacial da população negra residente na região da Liberdade ao longo do tempo.\nPara isso, dentre as diferentes bases disponíveis, optou-se por utilizar os dados do censo demográfico brasileiro, produzidos e disponibilizados pelo IBGE. Tal escolha reside na possibilidade de:\n\nReplicar a análise para diferentes partes do território brasileiro (reprodutibilidade);\nRealizar o resgate histórico da temática (cobertura temporal) e\nObservar a distribuição do fenômeno espacial (cobertura espacial).\n\nA análise proposta fará uso dos microdados censitários. Para uma versão similar baseada nos setores censitários, veja essa outra postagem (CRIAR LINK). Por fim, uma análise integrando ambos os dados, microdados e dados agregados por setor censitário, pode ser vista aqui (CRIAR LINK).\nAntes da exploração proposta, vale mencionar que dois pilares conduzem a análise proposta: i) a busca por uma construção de caráter mais didático e não necessariamente extensiva1, e, ii) o uso das chamadas boas práticas para a manipulação de dados. Sem negar a importância da eficiência que as consultas e códigos devem perseguir, privilegia-se uma construção mais gradual, incremental e transparente - tarefa em muito facilitada pela concepção e ferramentas que compõem o Tidyverse. Ressalte-se, ainda, que um dos horizontes que guiam o presente esforço é o da Ciência Aberta.\n\n\nUma prática bastante usual ao escrever códigos no R consiste em “declarar/ativar” os pacotes (de funções) no início do script - por vezes isso também ocorre com as variáveis que serão utilizadas ao longo do percurso. Ainda que não seja obrigatória, essa prática permite que as funções sejam utilizadas sem que se explicite o nome do pacote (no R, para declarar o pacote e uma de suas funções segue-se a seguinte forma: pacote::função).\nA seguir, duas formas para instalar e ativar os pacotes necessários são apresentadas. Gerando o mesmo resultado (ativação dos pacotes), a diferença entre a primeira forma (1st Way) e a segunda (2nd Way) é que na última o código checa os pacotes presentes no ambiente local/computador do usuário e apenas instala os que ainda não foram baixados. Já no primeiro caso, mesmo que o pacote já esteja instalado, o comando baixará novamente o seu conteúdo e o reinstalará. Note: aqui, para tornar mais claro o que está ocorrendo no segundo caminho de instalação, optou-se por inserir mensagens indicando se o pacote já estava instalado ou não (graças ao uso do comando print(“mensagem_a_ser_exibida”)). Observe, ainda, que o símbolo # é utilizado para a inserção de comentários no código, algo tido como uma boa prática. Ou seja, sempre que se fizer uso desse símbolo, o conteúdo que vier imediatamente após ele será “ignorado” pelo R.\n\n# Save all the packages needed inside an object (\"folder\")\n1pckgs &lt;- c(\"tidyverse\", \"sf\", \"here\", \"janitor\", \"arrow\", \"censobr\", \"geobr\", \"sidrar\", \"gt\", \"devtools\", \"mapview\", \"terra\", \"patchwork\")\n\n# 1st way \n## Install all the packages previously selected\n2# install.packages(pckgs, dependencies = TRUE)\n\n## Load the packages. This make all the packages functionalities available \n3# lapply(pckgs, library, character.only = TRUE)\n\n\n# 2nd way\n## Create a list with all the packages already installed\n4pckgs_installed &lt;- installed.packages()[,1]\n\n# Install only the packages needed that are not in your computer yet\n5for (pckgs_sel in pckgs) {\n  print(paste(\"Checking if the package\", pckgs_sel, \"is installed\"))\n  if (!(pckgs_sel %in% pckgs_installed)) {\n    install.packages(pckgs_sel, dependencies = TRUE)\n    print(paste(\"The\", pckgs_sel, \"was installed\"))\n  } else {\n  print(paste(\"The\", pckgs_sel, \"is already installed\" ))}\n}\n\n# Load the packages\n6lapply(pckgs, library, character.only = TRUE)\n\n\n1\n\nSelecione os pacotes necessários;\n\n2\n\nInstale os pacotes (1st way);\n\n3\n\nAtive os pacotes (1st way);\n\n4\n\nIdentifique os pacotes já instalados no R (2nd way);\n\n5\n\nCheque e instale apenas os pacotes que não estão em seu computador (2nd way);\n\n6\n\nAtive os pacotes de interesse (2nd way);\n\n\n\n\n\n\n\nDiferentes são os caminhos para acessar e manipular dados no R. A reconstrução manual da base dentro do próprio ambiente, com a transcrição de dados ainda não digitalizados, é um exemplo. Registre-se, porém, que quanto maior for o volume de dados, mais demorada e suscetível a erros será essa tarefa. Por esse motivo, costuma-se evitar esse tipo de abordagem.\nOutra opção consiste em salvar um conjunto de dados já tabulado por alguma instituição (IBGE, IPEA, Fundação SEADE, CEM USP, etc.) em um computador pessoal e abri-lo no ambiente do R. O IBGE, por exemplo, disponibiliza diferentes recursos e plataformas com essa finalidade: i) a seção do site da instituição voltada aos censos demográficos; ii); o seu sistema de recuperação de informações, o SIDRA, ou, iii) o acesso ao servidor do IBGE via FTP.\nPor fim, mas sem esgotar o assunto, o acesso a dados pode ser feito por meio de pacotes criados especificamente para esse fim. Com uma vasta gama de casos no R, este é o caminho que será explorado aqui. Mais especificamente, serão utilizados o CENSOBR, que fornece dados cenistários tabulares (tabelas), e o GEOBR, que disponibiliza dados geoespaciais. A partir desses de ambas as bases, os dados de interesse serão integrados, de forma a incorporar a dimensão territorial na análise.\nCom vistas a tornar a presente exploração mais facilmente replicável a outros contextos, a seguir dois objetos são criados: i) um para definir a escala na qual a área de interesse está inserida - no presente caso, dado que a região de interesse é a Liberdade, o município de São Paulo será escolhido - e ii) o outro para o ano do censo de interesse. Iniciando a análise para o ano de 2010, com esse tipo de procedimento bastaria mudar duas informações, a escala e o ano, e todo o restante do código será gerado automaticamente, mas agora com novos dados.\n\n# Let's create a list of variables to reuse the code\n## Select the municipality(ies)' name(s)\nmun_name = \"São Paulo\"\n\n## Select the census demographic year\ncensus_year = 2010 # Possible years: 1960, 1970, 1980, 1991, 2000, 2010. See: https://ipeagit.github.io/censobr/articles/censobr.html\n\nO próximo passo consiste em descobrir e escolher quais variáveis do censo retratam a questão e/ou o fenômeno a ser analisado (no presente caso, a raça/cor). Para isso, deve-se recorrer ao dicionário de variáveis.\nAntes, porém, é importante relembrar que os dados censitários demográficos produzidos pelo IBGE são disponibilizados a partir de dois grandes tipos: os microdados (dados da amostra) e os agregados por setor censitário (dados do universo)2. Ambos os dados podem ser acessados por meio do pacote CENSOBR3, ainda que o foco da presente exploração baseie-se nos microdados, como anteriormente sinalizado.\nAssim sendo, conforme ilustra o código a seguir, inicia-se com a escolha do tipo de dado que será analisado (neste caso, os microdados da amostra). Em seguida, o dicionário de variáveis será visitado para a identificação do tema/variáveis de interesse (no presente caso, a questão racial, retratada como cor ou raça).\n\n# Choose the variables\n## Select the dataset of interest\n1dataset_sel = \"population\"\n# Para ver as possibilidades, digite  ?censobr::data_dictionary no console e veja o argumento \"dataset\". Ali podem ser vistas as bases disponibiizadas pelo pacote (\"population\", \"households\", \"families\", \"mortality\", \"emigration\", \"tracts\")\n\n## See the variable dictionary\n2data_dictionary(year = census_year, dataset = dataset_sel)\n # Possibilities: 1960, 1970, 1980, 1991, 2000, 2010. See: https://ipeagit.github.io/censobr/articles/censobr.html\n\n\n1\n\nDefina qual base dos microdados será utilizada;\n\n2\n\nBaixe o dicionário de variáveies da base selecionada;\n\n\n\n\nObservando-se o dicionário de variáveis, algumas variáveis foram escolhidas (ver o quadro a seguir). Primando pela concisão, os critérios para a seleção foram a escala de interesse (V0011) e os limites político-administrativos do dado (V0001 e V0002); a geração da estimativa do número de pessoas (V0010); a possibilidade de ligação dessa base com as demais bases dos microdados (V0300) e, por fim, a inclusão da questão a ser analisada, raça (V0606), a qual se acrescentou o genêro (V0601).\n\n\n\nCódigo das variáveis\nNomenclatura\n\n\n\n\nV0001\nUnidade da Federação (UF)\n\n\nV0002\nCód. do município\n\n\nV0011\nÁrea de ponderação\n\n\nV0300\nVariável de controle\n\n\nV0010\nPeso amostral\n\n\nV0606\nRaça ou Cor\n\n\nV0601\nSexo\n\n\n\n\n# Choose the population variables of interest \nvar_cens_pop &lt;- c(\"V0001\", \"V0002\", \"V0011\", \"V0300\", \"V0010\", \"V0606\", \"V0601\")\n\nEscolhidas as variáveis, o passo seguinte consiste em obter os dados propriamente ditos (“baixá-los” para a sessão atual do R). Ao realizar essa tarefa, alguns avisos podem ser gerados. Não se preocupe, porém. A partir da leitura dos avisos, verifica-se que as mensagens geradas não se referem a um erro, mas sim a uma série de orientações padrão.\nRegistre-se, em tempo, que após realizar todo o procedimento de acesso e manipulação para o ano de 2010, adiante o mesmo caminho será replicado com os dados dos censos de 2000 e 1991.\nCRIAR UMA CAIXA A PARTE: Os dados da amostra do censo demográfico brasileiro costumam ser grandes e pesados, o que implica em um uso bastante intenso da memória RAM. Para lidar com esse comportamento do R (alocação dos dados na memória RAM), uma estratégia interessante é adotada pelo CENSOBR: preparar/estruturar o cômputo e gerá-lo apenas quando ele for explicitamente solicitado (mais detalhes podem ser vistos aqui).\n\n# Download and Select the variables of interest from POP MICRODATA, including RACE\nmicro_pop_orig &lt;- read_population(year = census_year, columns = var_cens_pop) # 1) if the downloading was stopped before finishing, use \"censobr::censobr_cache(delete_file = \"2000_population_v0.3.0.parquet\")\" to exclude it from your computer before running the code again; 2) for the 2010 census, the argument 'add_labels = \"pt\"' transform the categories codes of variabels into its labels.\n\n\n# Compute the total population for the municipality, weighting area (AP) and household by race\n## Select the municipality of interest and load the pop data\n1micro_pop &lt;- micro_pop_orig |&gt;\n2  filter(V0001 == \"35\" & V0002 == \"50308\") |&gt;\n3  collect() |&gt;\n  # mutate(V0624 = as.numeric(V0624)) |&gt;\n4  clean_names()\n\n5glimpse(micro_pop)\n\n\n1\n\nSelecione a base de dados de interesse e crie um novo objeto para armazenar o resultado das operações a seguir;\n\n2\n\nFiltre os dados, escolhendo apenas os que se referem ao município de São Paulo;\n\n3\n\n“Traga” os dados para a sessão atual do R;\n\n4\n\nUniformize o nome das variáveis (padrão adotado: letras mínusculas, com o espaço entre as palavras preenchido pelo símbolo “_”), e,\n\n5\n\nObserve o resultado gerado.\n\n\n\n\nRows: 552,037\nColumns: 7\n$ v0001 &lt;chr&gt; \"35\", \"35\", \"35\", \"35\", \"35\", \"35\", \"35\", \"35\", \"35\", \"35\", \"35\"…\n$ v0002 &lt;chr&gt; \"50308\", \"50308\", \"50308\", \"50308\", \"50308\", \"50308\", \"50308\", \"…\n$ v0011 &lt;chr&gt; \"3550308005001\", \"3550308005001\", \"3550308005001\", \"355030800500…\n$ v0300 &lt;dbl&gt; 6965, 6965, 6965, 6965, 7117, 7117, 7117, 7117, 48707, 48707, 48…\n$ v0010 &lt;dbl&gt; 12.9312, 12.9312, 12.9312, 12.9312, 10.5984, 10.5984, 10.5984, 1…\n$ v0606 &lt;chr&gt; \"1\", \"4\", \"4\", \"4\", \"1\", \"1\", \"1\", \"4\", \"1\", \"1\", \"1\", \"3\", \"1\",…\n$ v0601 &lt;chr&gt; \"2\", \"1\", \"2\", \"1\", \"2\", \"1\", \"1\", \"1\", \"2\", \"1\", \"1\", \"1\", \"2\",…\n\n\nA partir do resultado obtido e da padronização adotada pelas funções do Tidyverse, é possível observar rapidamente a estrutura da tabela (552307 linhas/observações e 7 colunas/variáveis), o tipo de dado presente em cada coluna, bem como os primeiros valores para cada uma das variáveis.\n\n\n\nCom os dados em mãos, a investigação propriamente dita sobre o comportamento da questão racial pode ir adiante. Nesse sentido, inicialmente será computada a distribuição da variável raça/cor para todo o município. Em seguida, o mesmo procedimento será realizado, mas dessa vez considerando-se a escala de maior detalhe do dado: a área de ponderação. Nesse momento, procurar-se-á entender como a distribuição da raça/cor se dá em diferentes regiões do território paulistano. Por fim, serão identificadas e analisadas as áreas de ponderação que abrangem a região de interesse - e que serão descobertas mais à frente.\nA seguir, inicia-se o cômputo para o município, como um todo. Para facilitar a interpretação, algumas transformações são realizadas na base (conversão de tipos de dados e criação de novas variáveis, por ex.).\n\n# Compute the RACE distribution by MUN\n1race_by_mun_2010 &lt;- micro_pop |&gt;\n  mutate(\n    v0606 = factor(v0606),\n    raca_cor_nome = factor(case_when(\n      v0606 == 1 ~ \"Branca\",\n      v0606 == 2 ~ \"Preta\",\n      v0606 == 3 ~ \"Amarela\",\n      v0606 == 4 ~ \"Parda\",\n      v0606 == 5 ~ \"Indígena\", \n      v0606 == 9 ~ \"Ignorado\")) \n2        ) |&gt;\n3  group_by(v0606, raca_cor_nome) |&gt;\n4  summarise(tot_peop_peso = sum(v0010),  tot_peop_orig = dplyr::n()) |&gt;\n5  rename(raca_cor = v0606) |&gt;\n6  ungroup() |&gt;\n7  mutate(prop_race = 100* tot_peop_peso/sum(tot_peop_peso))\n\n# See the result\n8race_by_mun_2010\n\n\n1\n\nSelecione a base e crie um objeto para guardar as informações sobre raça/cor em todo o município de São Paulo;\n\n2\n\nTransforme o tipo da variável raça/cor (de character para fator) e crie uma nova variável (coluna). Neste caso, as categorias de raça/cor são codificadas com nomes (preta, indígena, branca, etc.), e não mais números;\n\n3\n\nDefina cada uma das raças/cores como grupos para as operações a seguir;\n\n4\n\nCompute as estimativas da população (tot_peop_peso) e o número de casos amostrados por grupo criado;\n\n5\n\nRenomeie a variável original de raça/cor (v0606);\n\n6\n\nDesagrupe os dados (caso queira entender o impacto desse passo, acrescente o símbolo de comentário no inicío dessa linha (“#”), indicando para o R que o dado deve continuar agrupado; rode o código e veja o resultado produzido);\n\n7\n\nCompute as proporções de pessoas para cada raça/cor e\n\n8\n\nObserve o resultado (quantidade e proporção de pessoas para cada raça/cor)\n\n\n\n\nOs dados gerados permitem que se construa um primeiro retrato sobre o total de pessoas por raça/cor no município de São Paulo em 2010.\nCRIAR UMA CAIXA A PARTE: Tão relevante quanto a geração de dados é a comunicação dos achados - algo que, aos poucos e na medida do possível, será explorado no presente texto. Isso porque, caso a sua publicização não seja adequada, o impacto gerado, na melhor das hipóteses, deixará de atingir toda a sua potencialidade. Ou seja, não desconsidere esse fator!\nA seguir, uma nova versão da tabela recém-criada é apresentada. Nela, como pode ser visto, existem menos variáveis, os nomes das variáveis são mais intuitivos (facilitando a leitura), os dados foram reordenados - do grupo com mais pessoas para o que possui menos - e ela é esteticamente mais atraente. Tais medidas, facilmente implementadas, ajudam a manter o foco do leitor no que realmente importa e facilitam a leitura e compreensão dos dados.\n\n# Adjust and make a new table \n1race_by_mun_2010 |&gt;\n2  select(raca_cor_nome, tot_peop_peso, prop_race) |&gt;\n3  rename(\"Raça ou cor\" = raca_cor_nome, \"Total de pessoas\" = tot_peop_peso, \"Proporção (%)\" = prop_race) |&gt;\n4  mutate(across(.cols = `Total de pessoas`, round)) |&gt;\n5  arrange(desc(`Proporção (%)`)) |&gt;\n6  gt()\n\n\n1\n\nSelecione a base de dados gerada;\n\n2\n\nEscolha apenas as variáveis de interesse;\n\n3\n\nRenomeie as variáveis;\n\n4\n\nArrendonde os valores referentes ao total de pessoas;\n\n5\n\nOrdene os dados da maior proporção de pessoas para a menor, e,\n\n6\n\nGere uma tabela mais visualmente atrativa;\n\n\n\n\n\n\n\n\n\n\nRaça ou cor\nTotal de pessoas\nProporção (%)\n\n\n\n\nBranca\n6823004\n60.630044\n\n\nParda\n3447290\n30.633035\n\n\nPreta\n717215\n6.373257\n\n\nAmarela\n250146\n2.222825\n\n\nIndígena\n12959\n0.115152\n\n\nIgnorado\n2891\n0.025688\n\n\n\n\n\n\n\nOutra forma bastante interessante para a visualização de dados e compreensão daquilo que se quer entender baseia-se no uso de gráficos. Para o presente caso, a opção mais apropriada seria o gráfico de barras. E como forma de explorar parte dos elementos que podem compô-lo, optou-se por i) adotar um título, subtítulo e fonte, e, ii) modififcar os valores dos eixos e a cor de fundo. Saliente-se, porém, que o uso de cor fazendo referência às raças ou mesmo o título adotado (mais descritivo e geral) poderiam seguir estratégias distintas e talvez mais interessantes, a depender do contexto e objetivo perseguidos - enfatizando o grupo de interesse, por exemplo4.\n\n# Create a graphic for the race distribution\n## Parameters to reuse\ntitle_grap =  \"Distribuição de pessoas por cor ou raça\"\nsubtitle_grap =  \"Município de São Paulo, 2010\"\ndata_orig_grap = \"IBGE, Censo 2010\"\n# ap_sel &lt;- c(3550308005001, 3550308005007, 3550308005008)\n\n## Municipality\n1race_mun_graph &lt;- race_by_mun_2010 |&gt;\n2  ggplot(aes(x = fct_reorder(raca_cor_nome, tot_peop_peso, .desc = T), y = tot_peop_peso, fill = raca_cor_nome)) +\n3    geom_col(show.legend = F) +\n    geom_text(aes(\n      label = round(tot_peop_peso)),\n      vjust = - 0.5,\n      hjust = 0.5,\n      size = 4,\n      fontface = \"bold\",\n      # colour = \"#3b3938\"\n4      ) +\n    geom_text(aes(\n      label = str_c(\"(\", round(prop_race, 2), \"%)\")),\n      vjust = 1.25,\n      hjust = 0.5,\n5      size = 3.5) +\n    labs(title = title_grap,\n       subtitle = subtitle_grap,\n       caption = data_orig_grap,\n       # x = \"(Cor ou raça)\",\n       # y = \"(Número de pessoas)\"\n6       )  +\n7  scale_fill_manual(values = c(\"yellow\", \"#fee6ce\", \"lightgrey\", \"#bf812d\", \"#8c510a\", \"#5e3814\")) +\n  scale_y_continuous(breaks = c(0, 2000000, 4000000, 6000000),\n8                    labels = c(\"0\", \"2 Mi\", \"4 Mi\", \"6 Mi\")) +\n  # scale_fill_viridis_d(direction = 1) +\n9  theme_classic(base_size = 14) +\n  theme(\n    axis.ticks.x = element_blank(),\n    # axis.text.x = element_blank(),\n    axis.ticks.y = element_blank(),\n    # axis.text.y = element_blank(),\n    axis.title = element_blank() # element_text(colour = \"grey\", size = 7.5))  \n    )\n\n# Look the graphic\n10race_mun_graph\n\n\n1\n\nDefina qual será a base utilizada para a criação do gráfico e crie um objeto para salvar o resultado gerado a seguir;\n\n2\n\nSelecione quais variáveis serão expostas no gráfico (eixos x e y);\n\n3\n\nEscolha o gráfico de barras como opção de representação;\n\n4\n\nDefina a localização dos totais de pessoas nas barras;\n\n5\n\nDefina a localização da proporção de pessoas nas barras;\n\n6\n\nDefina quais serão o título, subtítulo e fonte;\n\n7\n\nDefina cores específicas para cada uma das raças (barras);\n\n8\n\nDefina novos intervalos para o eixo y (total de pessoas);\n\n9\n\nEscolha como o fundo e os elementos dos eixos devem ser visualizados, e,\n\n10\n\nApresente o gráfico.\n\n\n\n\n\n\n\n\n\n\n\nA partir do gráfico, verifica-se, por exemplo, que cerca de 3/5 (60,6%) da população paulistana se autodeclarou branca em 2010. A população negra (parda + preta), por sua vez, respondeu por 37% de todos os paulistanos e paulistanas. No extremo oposto encontram-se as pessoas direta ou indiretamente vinculadas aos povos asiáticos (amarelos) e à população indígena. Presentes em nosso território antes da colonização europeia, os povos originários do Brasil representavam apenas 0,1% dos e das paulistanas em 2010, perfazendo quase treze mil pessoas.\n\n\n\nDe forma a aprofundar o conhecimento sobre a área de interesse aqui tratada (região da Liberdade), a seguir será explorada a distribuição da raça/cor por área de ponderação. Ao revisitar a temática em uma escala mais detalhada, comparações entre regiões tornam-se possíveis, com novos subsídios e/ou padrões podendo ser revelados (para o município e para a área de interesse).\nA seguir, o código gera a distribuição da população por raça/cor para cada uma das áreas de ponderação do município de São Paulo.\n\n# Compute the RACE distribution by AP\nrace_by_ap_2010 &lt;- micro_pop |&gt;\n  mutate(v0606 = factor(v0606),\n         v0011 = factor(v0011)\n         ) |&gt;\n  group_by(v0011, v0606, .drop = FALSE) |&gt; \n  summarise(tot_peop_peso = sum(v0010), tot_peop = n()) |&gt;\n  mutate(prop_race = 100*tot_peop_peso/sum(tot_peop_peso),\n         raca_cor_nome = factor(case_when(\n           v0606 == 1 ~ \"Branca\",\n           v0606 == 2 ~ \"Preta\",\n           v0606 == 3 ~ \"Amarela\",\n           v0606 == 4 ~ \"Parda\",\n           v0606 == 5 ~ \"Indígena\",\n           v0606 == 9 ~ \"Ignorado\"))\n         ) |&gt; \n  relocate(ap = v0011, raca_cor = v0606, raca_cor_nome) \n\n`summarise()` has grouped output by 'v0011'. You can override using the\n`.groups` argument.\n\n# Show the result\nrace_by_ap_2010\n\n# A tibble: 1,860 × 6\n# Groups:   ap [310]\n   ap            raca_cor raca_cor_nome tot_peop_peso tot_peop prop_race\n   &lt;fct&gt;         &lt;fct&gt;    &lt;fct&gt;                 &lt;dbl&gt;    &lt;int&gt;     &lt;dbl&gt;\n 1 3550308005001 1        Branca               13619.      710     57.6 \n 2 3550308005001 2        Preta                  978.       49      4.14\n 3 3550308005001 3        Amarela               1921.       95      8.12\n 4 3550308005001 4        Parda                 7133.      359     30.2 \n 5 3550308005001 5        Indígena                 0         0      0   \n 6 3550308005001 9        Ignorado                 0         0      0   \n 7 3550308005002 1        Branca               15653.      764     69.9 \n 8 3550308005002 2        Preta                 1360.       62      6.07\n 9 3550308005002 3        Amarela                588.       26      2.63\n10 3550308005002 4        Parda                 4786.      240     21.4 \n# ℹ 1,850 more rows\n\n\nO resultado produzido está no que se costuma chamar de base ou tabela de forma longa. Mais adequada para a manipulação de dados, percebe-se que para cada área de ponderação são apresentadas todas as categorias da variável raça/cor, dispostas verticalmente, bem como os seus valores. Tomando-se como exemplo a primeira área de ponderação, 3550308005001, verifica-se que a primeira linha é destinada à raça branca, a segunda à preta, a terceira à amarela e assim por diante. Essa disposição é, então, retomada quando se inicia a segunda área de ponderação, 3550308005002, com a linha sete apresentando os dados para a raça branca, a linha oito para a raça preta, etc. Tal forma, saliente-se, nem sempre facilita a visualização e o entendimento do que se quer investigar.\nTendo isso em vista, a seguir os mesmos dados serão apresentados a partir da chamada forma longa. Como poderá ser visto, dessa vez cada área de ponderação ocupa apenas uma linha da tabela. As categorias da variável raça/cor, por sua vez, são transpostas para as colunas.\n\n# Transpose the data into a wider table   \n1race_by_ap_2010_wider &lt;- race_by_ap_2010 |&gt;\n2  pivot_wider(id_cols = ap, names_from = raca_cor, values_from = c(tot_peop_peso, prop_race)) |&gt;\n3  set_names(\"ap\", \"branca\", \"preta\", \"amarela\", \"parda\", \"indigena\", \"ignorado\", \"branca_prop\",  \"preta_prop\", \"amarela_prop\", 'parda_prop',  \"indigena_prop\", \"ignorado_prop\") |&gt;\n4  relocate(\"ap\", \"branca\",  \"parda\", \"preta\", \"amarela\", \"indigena\", \"ignorado\", \"branca_prop\", 'parda_prop',  \"preta_prop\", \"amarela_prop\",  \"indigena_prop\", \"ignorado_prop\") |&gt;\n5  ungroup() |&gt;\n6  mutate(tot_pop = branca + parda + preta + amarela + indigena + ignorado)\n\n\n# See the first version of the wider table\n7race_by_ap_2010_wider\n\n# Look only to the number of people (absolute values) by AP and race\n8head(race_by_ap_2010_wider[c(1:7, 14)], n = 10) |&gt;\n  mutate(across(.cols = !ap, .fns = round)) |&gt; \n  rename(Branca = branca, Parda = parda, Preta = preta, Amarela = amarela, `Indígena` = indigena, Ignorado = ignorado, Total = tot_pop) |&gt; \n  gt(rowname_col = \"ap\")\n\n# Now consider only the proportion of people (relative values) by AP and race\n9head(race_by_ap_2010_wider[c(1, 8:14)], n = 10) |&gt;\n  rename(`Branca (%)` = branca_prop, `Parda (%)` = parda_prop, `Preta (%)` = preta_prop, `Amarela (%)` = amarela_prop, `Indígena (%)` = indigena_prop, `Ignorado (%)` = ignorado_prop, Total = tot_pop) |&gt;\n  gt(rowname_col = \"ap\")\n  \n# write_csv2(race_by_ap_2010_wider, file = here(file.path(\"2010\", \"Gerados\", \"Tabelas\", \"raca_ap_sp_2010.csv\")))\n\n\n1\n\nSelecione a base e crie um objeto para salvar os dados em formato longo;\n\n2\n\nTransforme as categorias da variável raça/cor, originalmente empilhadas, em colunas;\n\n3\n\nAdote novos nomes (mais intuitivos) para as colunas;\n\n4\n\nMude a ordem das colunas;\n\n5\n\nDesagrupe os dados;\n\n6\n\nCrie uma coluna e compute a população total das AP (soma de todas as raças mais os casos “ignorado”);\n\n7\n\nObserve os dados dispostos na nova forma e note que a base apresenta tanto os dados absolutos quanto os relativos;\n\n8\n\nObserve os resultados para as dez primeiras áreas de ponderação, considerando apenas o número de pessoas (volume) para cada cor/raça (perceba o arredondamento dos valores praticado), e,\n\n9\n\nObserve os resultados para as dez primeiras áreas de ponderação, mas agora considerando apenas a proporção de pessoas para cada cor/raça.\n\n\n\n\n# A tibble: 310 × 14\n   ap        branca parda preta amarela indigena ignorado branca_prop parda_prop\n   &lt;fct&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt;      &lt;dbl&gt;\n 1 35503080… 13619. 7133.  978.   1921.      0          0        57.6       30.2\n 2 35503080… 15653. 4786. 1360.    588.      0          0        69.9       21.4\n 3 35503080… 22803. 8443. 1531.   1644.    171.         0        65.9       24.4\n 4 35503080… 17379. 8837. 1622.   5675.    379.         0        51.3       26.1\n 5 35503080… 18996. 8334. 1049.    829.     56.5        0        64.9       28.5\n 6 35503080… 27442. 6309. 1212.   1962.     22.7        0        74.3       17.1\n 7 35503080… 28848. 4790. 1045.   5697.     20.0        0        71.4       11.9\n 8 35503080… 16871. 4180.  676.   6940.     25.4        0        58.8       14.6\n 9 35503080… 13897. 3394.  680.    610.     25.3        0        74.7       18.2\n10 35503080… 22012. 4791. 1412.   2564.      0          0        71.5       15.6\n# ℹ 300 more rows\n# ℹ 5 more variables: preta_prop &lt;dbl&gt;, amarela_prop &lt;dbl&gt;,\n#   indigena_prop &lt;dbl&gt;, ignorado_prop &lt;dbl&gt;, tot_pop &lt;dbl&gt;\n\n\n\n\n\n\n\n\n\nBranca\nParda\nPreta\nAmarela\nIndígena\nIgnorado\nTotal\n\n\n\n\n3550308005001\n13619\n7133\n978\n1921\n0\n0\n23651\n\n\n3550308005002\n15653\n4786\n1360\n588\n0\n0\n22388\n\n\n3550308005003\n22803\n8443\n1531\n1644\n171\n0\n34593\n\n\n3550308005004\n17379\n8837\n1622\n5675\n379\n0\n33892\n\n\n3550308005005\n18996\n8334\n1049\n829\n57\n0\n29265\n\n\n3550308005006\n27442\n6309\n1212\n1962\n23\n0\n36948\n\n\n3550308005007\n28848\n4790\n1045\n5697\n20\n0\n40400\n\n\n3550308005008\n16871\n4180\n676\n6940\n25\n0\n28692\n\n\n3550308005009\n13897\n3394\n680\n610\n25\n0\n18606\n\n\n3550308005010\n22012\n4791\n1412\n2564\n0\n0\n30780\n\n\n\n\n\n\n\n\n\n\n\n\nBranca (%)\nParda (%)\nPreta (%)\nAmarela (%)\nIndígena (%)\nIgnorado (%)\nTotal\n\n\n\n\n3550308005001\n57.584\n30.160\n4.1356\n8.1202\n0.000000\n0\n23651\n\n\n3550308005002\n69.919\n21.378\n6.0749\n2.6286\n0.000000\n0\n22388\n\n\n3550308005003\n65.917\n24.407\n4.4265\n4.7538\n0.495077\n0\n34593\n\n\n3550308005004\n51.278\n26.075\n4.7846\n16.7437\n1.118900\n0\n33892\n\n\n3550308005005\n64.910\n28.479\n3.5859\n2.8323\n0.193212\n0\n29265\n\n\n3550308005006\n74.273\n17.075\n3.2793\n5.3109\n0.061323\n0\n36948\n\n\n3550308005007\n71.406\n11.857\n2.5855\n14.1019\n0.049623\n0\n40400\n\n\n3550308005008\n58.802\n14.567\n2.3558\n24.1863\n0.088484\n0\n28692\n\n\n3550308005009\n74.692\n18.239\n3.6551\n3.2777\n0.136077\n0\n18606\n\n\n3550308005010\n71.515\n15.566\n4.5888\n8.3301\n0.000000\n0\n30780\n\n\n\n\n\n\n\nA partir das últimas tabelas, que apresetam os valores absolutos (número total/volume/montante de pessoas) e relativos (proporção de pessoas), verifica-se uma disposição dos dados mais amigável. Um desafio persiste, porém: o município de São Paulo é composto por 310 áreas de ponderação. Ou seja, a tabela é constituída por 310 linhas, tornando a apreensão do todo difícil.\nEm situações desse tipo, com bases de dados extensas, usualmente recorre-se a estratégias para sintetizá-los e explicitar eventuais padrões. Uma delas, inclusive, já foi explorada: o uso de ferramentas baseadas em visualização de dados, como os gráficos. A ela, some-se a geração de medidas síntese de localização, tal qual a famigerada média, e de dispersão, dentre as quais pode ser citado o desvio padrão.\nA seguir, dois tipos de gráficos (“pontos” e”boxplot + violino”) e uma tabela (composta por medidas de resumo) serão apresentados. Mais do que replicar as mesmas informações em formatos distintos, o que se espera é que eles se complementem e possibilitem uma leitura mais rica e acurada.\nIniciando a exploração com os gráficos, forma mais intuitiva, almeja-se verificar se alguns indícios ou padrões revelam-se a partir de uma análise visual. A partir das intuições encontradas e/ou questionamentos levantados (lembre-se: os questionamentos são a base da ciência!), em um segundo momento serão computados elementos “mais precisos” (estatísticas) para uma melhor descrição e caracterização da distribuição espacial da raça/cor, agregados em formato de tabela.\n\n# Create a graphic representing the race distribution with a dot plot (here, some noise is added)\ngraf_race_ap_2010_pnt0 &lt;- race_by_ap_2010 |&gt;\n  ggplot(aes(x = fct_rev(fct_reorder(raca_cor_nome, tot_peop_peso, median)), y = tot_peop_peso)) +\n    geom_point(alpha = 0.4, shape = 1) + \n    labs(x = NULL,\n         y = NULL) +\n    theme_classic(base_size = 14) +\n    theme(\n      # axis.ticks.x = element_blank(),\n      axis.ticks.y = element_blank()) +\n  coord_flip()\n\n\n# Create a graphic representing the race distribution with a dot plot\n1graf_race_ap_2010_pnt &lt;- race_by_ap_2010 |&gt;\n2  ggplot(aes(x = fct_rev(fct_reorder(raca_cor_nome, tot_peop_peso, median)), y = tot_peop_peso)) +\n3    geom_point(position = 'jitter', alpha = 0.4, shape = 1) +\n    labs(x = NULL,\n4         y = NULL) +\n5    theme_classic(base_size = 14) +\n    theme(\n      # axis.ticks.x = element_blank(),\n      axis.ticks.y = element_blank()) +\n6  coord_flip()\n\n# Create a graphic representing the race distribution with a violin and boxplot\ngraf_race_ap_2010_res &lt;- race_by_ap_2010 |&gt;\n  ggplot(aes(x = fct_rev(fct_reorder(raca_cor_nome, tot_peop_peso, median)), y = tot_peop_peso)) +\n    geom_boxplot() +\n    geom_violin(scale = \"width\", fill = NA, color = \"darkorange\", alpha = 0.7) +\n    labs(x = NULL,\n         y = NULL) +\n    theme_classic(base_size = 14) +\n    theme(\n      # axis.ticks.x = element_blank(),\n      axis.ticks.y = element_blank()) +\n  coord_flip()\n    \n\n# Plot and compare both graphics\n7(graf_race_ap_2010_pnt0 / graf_race_ap_2010_pnt / graf_race_ap_2010_res)\n\n\n1\n\nSelecione a base de dados e crie um objeto para salvar o gráfico;\n\n2\n\nDefina quais serão as variáveis que aparecerão no gráfico;\n\n3\n\nEscolha o tipo de gráfico/representação dos dados. Note: nos dois primeiros casos, gera-se um gráfico de pontos, com os dados do segundo levemente deslocados. Já no segundo apresenta-se uma sobreposição entre o gráfico de violino e boxplot;\n\n4\n\nExclua o nome dos eixos dos gráficos;\n\n5\n\nDefina alguns elementos visuais do gráfico, como o tamanho das letras, a cor do fundo e a exclusão dos pequenos traços que ligam os valores aos eixos;\n\n6\n\nInverta o eixo dos gráficos, e,\n\n7\n\nDefina a ordem em que os gráficos serão dispostos.\n\n\n\n\n\n\n\n\n\n\n\nComo pode ser visto, três gráficos são apresentados. Note-se, contudo, que tanto o primeiro quanto o segundo tratam de um mesmo tipo de representação (gráfico de pontos). Neles, os pontos indicam qual é a população total de cada uma das áreas de ponderação por raça/cor - a diferença, aqui explorada para fins didáticos, reside no fato do segundo gráfico apresentar dados ligeiramente deslocados de seu valor real, uma técnica usada para facilitar a análise e a apreensão de padrões.\nObervando-se a localização dos pontos, verifica-se, por exemplo, que enquanto as populações preta, indígena e amarela apresentam valores mais concentrados (maior número de pontos próximos e/ou sobrepostos, reforçando a cor preta), no caso das populações pardas e branca o total de pessoas nas áreas de ponderação está mais disperso (há uma maior variabilidade).\nConsiderando-se essa mesma separação, é seguro afirmar que todas as áreas de ponderação do município de São Paulo (ponto preto) possuem menos de 10.000 habitantes pretos, indígenas ou amarelos - limiar ultrapassado pelos residentes brancos e pardos em várias áreas de ponderaçao. Também é possível notar que, diferentemente de todas as outras populações, as áreas de ponderação com o menor número de pessoas brancas somam cerca de 10.000 pessoas - exceção feita a dois casos.\nO segundo gráfico, composto pela sobreposição entre o gráfico de violino (linha laranja) e o boxplot , busca representar a distribuição da população, por raça/cor e áreas de ponderação, de outra forma. Iniciando-se a leitura pelo boxplot, destaque-se que alguns elementos dessa representação costumam ser sempre observados. Um deles é a sua caixa, que perfaz a metade central de todo o conjunto dos dados. Com isso, é possível estimar, por exemplo, que metade da população branca varia entre 16 e 26 mil pessoas, considerando-se a sua distribuição por área de ponderação. Já no caso da população parda esses valores parecem variar entre 5.000 e 15.000 pessoas (não se preocupe com a precisão nesse momento, pois os números corretos serão observados na tabela que produzida a seguir).\nO boxplot fornece, ainda, ao menos duas outras informações interessantes. A primeira diz respeito à linha vertical central da caixa, que indica onde se encontra a mediana. Ordenando-se os totais das populações do menor para o maior valor, a mediana é o valor que divide o conjunto de dados ao meio5. No caso da população preta, por exemplo, esse valor parece estar próximo a 2.500 pessoas.\nA outra informação de interesse está relacionada aos pontos que aparecem para algumas raças/cores. Neste caso, eles indicam as áreas de ponderação cuja população é muito diferente de todo o restante - esses casos são chamados de pontos discrepantes ou outliers. Percebe-se, por exemplo, que a raça amarela possui algumas áreas de ponderação com uma população muito maior do que o comportamento geral dessa raça no município. Já no extremo oposto encontra-se a populaçao preta, que não apresenta nenhuma área de ponderação que foge do comportamento geral dessa raça/cor.\nComplementando os achados do boxplot, novos elementos obtidos por meio do gráfico de violino podem ser acrescentados. Ao representar de forma mais contínua a distribuição das populações por raça/cor e área de ponderação, é possível notar, por exemplo, que a população parda apresenta dois pequenos picos, um logo abaixo de 5.000 pessoas e outro em torno de 14.000 pessoas. As populações preta e branca, por sua vez, parecem apresentar um único pico. Com um olhar um pouco mais treinado, também é possível notar uma ligeira concentração de casos antes da mediana para essas raças/cores - compare o tamanho das caudas do gráfico antes e depois da linha da mediana.\nDe forma a tornar mais precisos os indícios, intuições e questões gerados a partir da visualização dos dados e avançar na busca de novos achados, a seguir serão computadas algumas estatísticas para cada uma das raças. Os resultados, por sua vez, são agrupados em uma mesma tabela.\n\n# Compute some metrics to describe the data\n## Compute the measures by race\n1branca_mtrc &lt;- summary(race_by_ap_2010_wider$branca)\nparda_mtrc &lt;- summary(race_by_ap_2010_wider$parda)\npreta_mtrc &lt;- summary(race_by_ap_2010_wider$preta)\namarela_mtrc &lt;- summary(race_by_ap_2010_wider$amarela)\nindigena_mtrc &lt;- summary(race_by_ap_2010_wider$indigena)\nignorado_mtrc &lt;- summary(race_by_ap_2010_wider$ignorado)\n\n## Create a table with all race metrics\n2tab_race_metrcs_ap &lt;- bind_rows(branca_mtrc, parda_mtrc, preta_mtrc, amarela_mtrc, indigena_mtrc, ignorado_mtrc) |&gt;\n3  as.data.frame() |&gt;\n  mutate(raca_cor = c(\"Branca\", \"Parda\", \"Preta\", \"Amarela\", \"Indigena\", \"Ignorado\"),\n4         across(.cols = !raca_cor, .fns = round)) |&gt;\n5  relocate(raca_cor) |&gt;\n6  set_names(\"Raça ou cor\", \"Menor valor\", \"1o. Quartil\", \"Mediana\", \"Média\", \"3o. Quartil\", \"Maior valor\")\n\ntab_race_metrcs_ap |&gt; \n7  gt(rowname_col = \"Raça ou cor\")\n\n\n1\n\nCompute algumas métricas para cada uma das raças/cores;\n\n2\n\nJunte todas as métricas calculadas (“colando” as linhas);\n\n3\n\nTransforme a junção anterior em um data.frame (“tabela”);\n\n4\n\nAcrescente uma variável para a raça/cor e arredonde os valores da população;\n\n5\n\nColoque a variável raça/cor na primeira posição da base, e,\n\n6\n\nDefina nomes mais intuitivos para as variáveis, e,\n\n7\n\nCrie uma tabela mais visualemente atrativa.|\n\n\n\n\n\n\n\n\n\n\n\nMenor valor\n1o. Quartil\nMediana\nMédia\n3o. Quartil\nMaior valor\n\n\n\n\nBranca\n4160\n17078\n21362\n22010\n26572\n42376\n\n\nParda\n720\n5276\n11051\n11120\n15784\n30592\n\n\nPreta\n82\n1274\n2264\n2314\n3186\n6208\n\n\nAmarela\n19\n238\n494\n807\n941\n6940\n\n\nIndigena\n0\n0\n22\n42\n48\n1005\n\n\nIgnorado\n0\n0\n0\n9\n0\n1231\n\n\n\n\n\n\n\nA partir dos valores da tabela, verifica-se que as percepções obtidas por meio dos gráficos é corroborada pelos números. Um dos achados obtidos visualmente indicava, por exemplo, uma maior concentração dos valores das populações preta, amarela e indígena por área de ponderação - a grosso modo, cria-se a noção de que a distribuição dessas raças ao longo do território era mais parecido (ou menos diferente) do que o encontrado para as raças brancas e parda. Recorrendo-se ao Intervalo Interquaril (IQR) para quantificar esse comportamento6, constata-se que a diferença das populações por área de ponderação para as raças branca e preta é de 9.494 e 10.508 pessoas, respectivamente. Por sua vez, ao se considerar as populações preta, amarela e indígena, essa diferença é de 1.912, 703 e 48 pessoas. Ou seja, mesmo considerando-se a diferença entre a população branca (menor valor do grupo mais disperso, de acordo com o IQR) e a população preta (maior valor do grupo mais concentrado), a dispersão ou variabilidade é cinco vezes maior a favor da raça branca (9.494 pessoas brancas/1.912 pessoas pretas).\nObservando-se as menores quantidades de pessoas por raça/cor presentes nas áreas de ponderação (coluna “Menor valor” da tabela), percebe-se que enquanto existe ao menos uma área de ponderação que não possui indígenas - valor que salta para ao menos 25% das áreas de ponderação, dado que o valor do 1º quartil é 07 -, o menor número de pessoas brancas em uma área de ponderação no município é de 4.160. Esse valor, aliás, é maior do que o encontrado em ao menos 75% de todas as áreas de ponderação para as raças/cores preta, amarela e indígena (observe e compare os dados a partir da coluna do 3º quartil).\nEm sentido oposto, ao se considerarem as maiores quantidades de pessoas por raça/cor e área de ponderação (coluna “Maior valor”), agora é possível mensurar e identificar as áreas que possuem as maiores populações preta (6.208 pessoas), amarela (6.940) e indígena (1.005). Dado que a simples comparação desse valor com o do 3º quartil para cada uma dessas raças/cores indica uma diferença não desprezível, pode-se aventar ou suspeitar que algo ocorreu/ocorre nessas porções do território, fomentando essa concentração espacial.\nOperando-se de forma similar, verifica-se que as estatísticas da tabela especificam as medidas anteriormente obtidas por meio dos gráficos. Dessa forma, as aproximações geradas para os percentis 25º e 75º (medidas limites da caixa do boxplot), bem como para o 50º (mediana), agora são mensuradas e localizadas de forma mais precisa. No caso da população preta, por exemplo, o primeiro, segundo (mediana) e terceiro quartis correspondem a 1.274, 2.264 e 3.186 pessoas. Por sua vez, essas mesmas medidas para a população parda perfazem e 5.276, 11.051 e 11.120 pessoas.\nPara finalizar essa etapa de “contextualização regional”, duas novas estratégias serão rapidamente exploradas. Enquanto a primeira está baseada no tamanho das áreas de ponderação, como um todo (ou seja, considerando todas as raças/cores), a segunda abordará a questão a partir do tamanho da população negra (pessoas pardas + pessoas pretas).\nO código a seguir fornece subsísios para a análise das áreas de ponderação (AP) mais populosas. O objetivo será compreender a composição por raça/cor para as cinco áreas com os maiores números de residentes - o número 5 foi escolhido para tornar a análise mais paupável e inteligível a partir dos dados brutos. Note-se, ainda, que um ranqueamento foi criado para auxiliar a leitura.\n\n# Select only the absolute values and rank all the race categories\n1race_by_ap_2010_wider_pos_abs &lt;- race_by_ap_2010_wider |&gt;\n2  select(!ends_with(\"_prop\")) |&gt;\n3  mutate(branca_rank = min_rank(desc(branca)),\n         parda_rank = min_rank(desc(parda)),\n         preta_rank = min_rank(desc(preta)),\n         amarela_rank = min_rank(desc(amarela)),\n         indigena_rank = min_rank(desc(indigena)),\n         total_rank = min_rank(desc(tot_pop)),\n         across(.cols = !c(ends_with(\"_rank\"), starts_with(\"ap\")), .fns = round)) |&gt;\n4  rename(total = tot_pop) |&gt;\n5  arrange(desc(total))\n\ntab_race_ap5_mean_abs &lt;- race_by_ap_2010_wider_pos_abs |&gt; \n6  slice_head(n = 5)\n\ntab_race_ap5_mean_abs |&gt;\n7  set_names(\"AP\", \"Branca\", \"Parda\", \"Preta\", \"Amarela\", \"Indígena\", \"Ignorado\", \"Total\", \"Branca (Pos)\", \"Parda (Pos)\", \"Preta (Pos)\", \"Amarela (Pos)\", \"Indígena (Pos)\", \"Total (Pos)\") |&gt;\n  mutate(Negra = Parda + Preta) |&gt;\n  relocate(Negra, .after = Preta) |&gt;\n8  gt()\n\n# Select only the proportion values and rank all the race categories\n9race_by_ap_2010_wider_pos_prop &lt;- race_by_ap_2010_wider |&gt;\n  select(ap, ends_with(\"_prop\"), tot_pop) |&gt; \n  # left_join(race_by_ap_2010_wider_pos_abs[c(\"ap\", \"total\")], join_by(ap)) |&gt;\n  # relocate(.after = ignorado_prop, total) |&gt;   \n  mutate(branca_prop_rank = min_rank(desc(branca_prop)),\n         parda_prop_rank = min_rank(desc(parda_prop)),\n         preta_prop_rank = min_rank(desc(preta_prop)),\n         amarela_prop_rank = min_rank(desc(amarela_prop)),\n         indigena_prop_rank = min_rank(desc(indigena_prop)),\n         total_rank = min_rank(desc(tot_pop))) |&gt;\n  rename(total = tot_pop) |&gt; \n  arrange(desc(total))\n\nrace_by_ap_2010_wider_pos_prop |&gt; \n  slice_head(n = 5) |&gt; \n  gt()\n\n\n1\n\nSelecione a base de interesse e crie um objeto para salvar os resultados;\n\n2\n\nSelecione apenas as variáveis que apresentam os totais populacionais por raça/cor (todas aquelas que não terminavam com “_prop”);\n\n3\n\nRanqueie, considerando a população total, as áreas de ponderação (AP) para cada uma das raça/cores ;\n\n4\n\nAdote nomes mais intuitivos para as variáveis;\n\n5\n\nOrdene as AP em função do tamanho de suas populações totais;\n\n6\n\nSelecione as cinco primeiras AP (mais populosas);\n\n7\n\nDefina nomes de variáveis mais intuitivas;\n\n8\n\nGere uma tabela mais visualmente atrativa, e,\n\n9\n\nRepita o mesmo procedimento, mas agora considerando as proporções populacionais por raça/cor e área de ponderação.\n\n\n\n\n\n\n\n\n\n\nAP\nBranca\nParda\nPreta\nNegra\nAmarela\nIndígena\nIgnorado\nTotal\nBranca (Pos)\nParda (Pos)\nPreta (Pos)\nAmarela (Pos)\nIndígena (Pos)\nTotal (Pos)\n\n\n\n\n3550308005259\n23107\n28449\n5200\n33649\n233\n0\n0\n56989\n127\n2\n5\n236\n201\n1\n\n\n3550308005189\n24431\n24757\n6208\n30965\n219\n124\n0\n55739\n99\n3\n1\n242\n22\n2\n\n\n3550308005280\n25903\n23058\n4934\n27992\n157\n39\n1231\n55321\n86\n10\n8\n273\n100\n3\n\n\n3550308005135\n25197\n24448\n4172\n28620\n206\n101\n0\n54124\n91\n4\n24\n246\n32\n4\n\n\n3550308005237\n28194\n20455\n3783\n24238\n856\n79\n0\n53366\n53\n33\n44\n93\n43\n5\n\n\n\n\n\n\n\n\n\n\n\nap\nbranca_prop\nparda_prop\npreta_prop\namarela_prop\nindigena_prop\nignorado_prop\ntotal\nbranca_prop_rank\nparda_prop_rank\npreta_prop_rank\namarela_prop_rank\nindigena_prop_rank\ntotal_rank\n\n\n\n\n3550308005259\n40.546\n49.920\n9.1242\n0.40968\n0.000000\n0.000\n56989\n294\n21\n52\n273\n201\n1\n\n\n3550308005189\n43.831\n44.417\n11.1380\n0.39247\n0.221855\n0.000\n55739\n265\n62\n14\n276\n44\n2\n\n\n3550308005280\n46.822\n41.681\n8.9181\n0.28397\n0.069949\n2.225\n55321\n237\n84\n57\n298\n139\n3\n\n\n3550308005135\n46.554\n45.170\n7.7080\n0.38137\n0.187363\n0.000\n54124\n242\n58\n92\n280\n58\n4\n\n\n3550308005237\n52.831\n38.329\n7.0879\n1.60389\n0.148234\n0.000\n53366\n199\n111\n119\n132\n71\n5\n\n\n\n\n\n\n\nA partir dos dados gerados, verifica-se que as cinco áreas de ponderação (AP) mais populosas do município de São Paulo variam de 56.989 a 53.366 pessoas (com uma média de 55.108 pessoas). Tal qual ocorre no município, as raças branca e parda concentram os maiores quantitativos de pessoas (para o município, cerca de 61% e 31%), sendo seguidas mais de longe pela pessoas pretas, amarelas e indígenas.\nRessalte-se, contudo, que a distância encontrada nesses casos é bem menor. Computando-se duas medidas de tendência central, constata-se que os totais médio e mediano de pessoas brancas dessas cinco AP são de 25366 e 25197. Já no caso das pessoas pardas, eles correspondem a 24233 e 25197.\nTambém é possível verificar que nas duas AP com o maior número de residentes do município (3550308005259 e 3550308005189, especificamente) ocorre uma inversão entre as raças/cor branca e parda. Totalizando 49,9% (28.449) e 44,4% (24.747), nelas a população parda supera a branca (a leitura espacial a seguir indicará que essas duas AP estão localizadas nos distritos do Lajeado, extremo leste do município, e Brasilândia, na Zona Norte).\n\n# Select the five AP with the highest population\n## Get the AP spatial limits\nap_mun_sp &lt;- read_weighting_area(code_weighting = 3550308, year = 2010)\n\nUsing year/date 2010\n\n## Find out the code of the five AP with the highest population from the aspatial data set\ntop_5_ap_abs &lt;- race_by_ap_2010_wider_pos_prop |&gt; \n  slice_head(n = 5) |&gt; \n  pull(ap)\n\n## Filter the 5 AP spatial limits of interest \nap_geo_sel &lt;- ap_mun_sp |&gt; \n  filter(code_weighting %in% top_5_ap_abs) \n\n\n# Get the district spatial limits\ndistrito_mun_sp &lt;- read_neighborhood(year = 2010) |&gt;\n  filter(code_muni == 3550308) |&gt; \n  select(abbrev_state, name_muni, code_district, name_district)\n\nUsing year/date 2010\n\n# See both AP selected and District data together in the space\nmapview(distrito_mun_sp, zcol = \"name_district\", color = \"gray35\", col.regions = \"royalblue\", alpha.regions = 0.4, legend = FALSE) + mapview(ap_geo_sel, zcol = \"code_weighting\", lwd = 2, burst = T)\n\n\n\n\n\n.diferentes estratégias de análise podem ser adotadas. Iniciando-se pelo\nEm seguida, serão selecionadas as áreas de ponderação com a maior população negra.\n\n\n\nConhecida a distribuição da questão racial para o município de São Paulo, como um todo, bem como entre regiões, o próximo passo consiste em observar a distribuição da questão racial em nossa área de interesse (região da Liberdade). O primeiro passo consiste em identificar quais são as áres de ponderação que abrangem a região. Recorrendo a um mapa interativo para essa finalidade, o objetivo será identificar, a partir da navegação espacial, quais são os códigos das áreas de ponderação qu recobrem a área de interesse.\n\n# Download the São Paulo weighting area limits    \n1ap_mun_sp &lt;- read_weighting_area(code_weighting = 3550308, year = 2010)\n\n\n1\n\nBaixe os limites das áreas de ponderação, definindo o município e o ano;\n\n\n\n\nUsing year/date 2010\n\n\n\n# Download the São Paulo district limits    \n2distrito_mun_sp &lt;- read_neighborhood(year = 2010) |&gt;\n  filter(code_muni == 3550308) |&gt; \n  select(abbrev_state, name_muni, code_district, name_district)\n\n\n2\n\nBaixe os limites dos distritos, definindo o município, o ano e as variáveis de interesse, e,\n\n\n\n\nUsing year/date 2010\n\n\n\n# Plot the weighting areas and district limits\n3mapview(ap_mun_sp, zcol = \"code_weighting\", legend = FALSE) + mapview(distrito_mun_sp, zcol = \"name_district\", alpha.regions = 0.2, legend = FALSE)\n\n\n3\n\nPlote os limites de ambos os dados.\n\n\n\n\n\n\n\n\nComo pode ser visto, o recurso gerado possibilita não só a navegação digital pelo território - com o deslocamento pelas áreas da cidade e o uso do zoom -, mas também permite escolher a imagem de fundo e as camadas geoespaciais (áreas de ponderação e/ou distritos) a serem visualizadas. Para isso, basta clicar no botão com o desenho de retângulos empilhados no lado esquerdo superior da janela e realizar as escolhas. Note: os vazios e/ou a superposição entre polígonos da mesma camada são resultado apenas da opção para deixar a visualização mais leve. No dado original, contudo, eles não existem (em linguagem mais técnica, não há problemas de topologia).\nA partir da interação com o mapa digital, verifica-se que três são as áreas de ponderação (AP) de interesse, com duas pertencendo ao distrito da Liberdade (3550308005007 e 3550308005008) e a outra ao distrito da Sé (3550308005001)."
  },
  {
    "objectID": "blog/04-post/Raca_cor_sp.html#colocando-a-mão-na-massa-preparando-o-ambiente",
    "href": "blog/04-post/Raca_cor_sp.html#colocando-a-mão-na-massa-preparando-o-ambiente",
    "title": "Raça ou cor em São Paulo - uma leitura a partir dos microdados censitários",
    "section": "",
    "text": "Uma prática bastante usual ao escrever códigos no R consiste em “declarar/ativar” os pacotes (de funções) no início do script - por vezes isso também ocorre com as variáveis que serão utilizadas ao longo do percurso. Ainda que não seja obrigatória, essa prática permite que as funções sejam utilizadas sem que se explicite o nome do pacote (no R, para declarar o pacote e uma de suas funções segue-se a seguinte forma: pacote::função).\nA seguir, duas formas para instalar e ativar os pacotes necessários são apresentadas. Gerando o mesmo resultado (ativação dos pacotes), a diferença entre a primeira forma (1st Way) e a segunda (2nd Way) é que na última o código checa os pacotes presentes no ambiente local/computador do usuário e apenas instala os que ainda não foram baixados. Já no primeiro caso, mesmo que o pacote já esteja instalado, o comando baixará novamente o seu conteúdo e o reinstalará. Note: aqui, para tornar mais claro o que está ocorrendo no segundo caminho de instalação, optou-se por inserir mensagens indicando se o pacote já estava instalado ou não (graças ao uso do comando print(“mensagem_a_ser_exibida”)). Observe, ainda, que o símbolo # é utilizado para a inserção de comentários no código, algo tido como uma boa prática. Ou seja, sempre que se fizer uso desse símbolo, o conteúdo que vier imediatamente após ele será “ignorado” pelo R.\n\n# Save all the packages needed inside an object (\"folder\")\n1pckgs &lt;- c(\"tidyverse\", \"sf\", \"here\", \"janitor\", \"arrow\", \"censobr\", \"geobr\", \"sidrar\", \"gt\", \"devtools\", \"mapview\", \"terra\", \"patchwork\")\n\n# 1st way \n## Install all the packages previously selected\n2# install.packages(pckgs, dependencies = TRUE)\n\n## Load the packages. This make all the packages functionalities available \n3# lapply(pckgs, library, character.only = TRUE)\n\n\n# 2nd way\n## Create a list with all the packages already installed\n4pckgs_installed &lt;- installed.packages()[,1]\n\n# Install only the packages needed that are not in your computer yet\n5for (pckgs_sel in pckgs) {\n  print(paste(\"Checking if the package\", pckgs_sel, \"is installed\"))\n  if (!(pckgs_sel %in% pckgs_installed)) {\n    install.packages(pckgs_sel, dependencies = TRUE)\n    print(paste(\"The\", pckgs_sel, \"was installed\"))\n  } else {\n  print(paste(\"The\", pckgs_sel, \"is already installed\" ))}\n}\n\n# Load the packages\n6lapply(pckgs, library, character.only = TRUE)\n\n\n1\n\nSelecione os pacotes necessários;\n\n2\n\nInstale os pacotes (1st way);\n\n3\n\nAtive os pacotes (1st way);\n\n4\n\nIdentifique os pacotes já instalados no R (2nd way);\n\n5\n\nCheque e instale apenas os pacotes que não estão em seu computador (2nd way);\n\n6\n\nAtive os pacotes de interesse (2nd way);"
  },
  {
    "objectID": "blog/04-post/Raca_cor_sp.html#obtendo-e-investigando-os-dados-usando-os-pacotes-geobr-e-censobr",
    "href": "blog/04-post/Raca_cor_sp.html#obtendo-e-investigando-os-dados-usando-os-pacotes-geobr-e-censobr",
    "title": "Raça ou cor em São Paulo - uma leitura a partir dos microdados censitários",
    "section": "",
    "text": "Diferentes são os caminhos para acessar e manipular dados no R. A reconstrução manual da base dentro do próprio ambiente, com a transcrição de dados ainda não digitalizados, é um exemplo. Registre-se, porém, que quanto maior for o volume de dados, mais demorada e suscetível a erros será essa tarefa. Por esse motivo, costuma-se evitar esse tipo de abordagem.\nOutra opção consiste em salvar um conjunto de dados já tabulado por alguma instituição (IBGE, IPEA, Fundação SEADE, CEM USP, etc.) em um computador pessoal e abri-lo no ambiente do R. O IBGE, por exemplo, disponibiliza diferentes recursos e plataformas com essa finalidade: i) a seção do site da instituição voltada aos censos demográficos; ii); o seu sistema de recuperação de informações, o SIDRA, ou, iii) o acesso ao servidor do IBGE via FTP.\nPor fim, mas sem esgotar o assunto, o acesso a dados pode ser feito por meio de pacotes criados especificamente para esse fim. Com uma vasta gama de casos no R, este é o caminho que será explorado aqui. Mais especificamente, serão utilizados o CENSOBR, que fornece dados cenistários tabulares (tabelas), e o GEOBR, que disponibiliza dados geoespaciais. A partir desses de ambas as bases, os dados de interesse serão integrados, de forma a incorporar a dimensão territorial na análise.\nCom vistas a tornar a presente exploração mais facilmente replicável a outros contextos, a seguir dois objetos são criados: i) um para definir a escala na qual a área de interesse está inserida - no presente caso, dado que a região de interesse é a Liberdade, o município de São Paulo será escolhido - e ii) o outro para o ano do censo de interesse. Iniciando a análise para o ano de 2010, com esse tipo de procedimento bastaria mudar duas informações, a escala e o ano, e todo o restante do código será gerado automaticamente, mas agora com novos dados.\n\n# Let's create a list of variables to reuse the code\n## Select the municipality(ies)' name(s)\nmun_name = \"São Paulo\"\n\n## Select the census demographic year\ncensus_year = 2010 # Possible years: 1960, 1970, 1980, 1991, 2000, 2010. See: https://ipeagit.github.io/censobr/articles/censobr.html\n\nO próximo passo consiste em descobrir e escolher quais variáveis do censo retratam a questão e/ou o fenômeno a ser analisado (no presente caso, a raça/cor). Para isso, deve-se recorrer ao dicionário de variáveis.\nAntes, porém, é importante relembrar que os dados censitários demográficos produzidos pelo IBGE são disponibilizados a partir de dois grandes tipos: os microdados (dados da amostra) e os agregados por setor censitário (dados do universo)2. Ambos os dados podem ser acessados por meio do pacote CENSOBR3, ainda que o foco da presente exploração baseie-se nos microdados, como anteriormente sinalizado.\nAssim sendo, conforme ilustra o código a seguir, inicia-se com a escolha do tipo de dado que será analisado (neste caso, os microdados da amostra). Em seguida, o dicionário de variáveis será visitado para a identificação do tema/variáveis de interesse (no presente caso, a questão racial, retratada como cor ou raça).\n\n# Choose the variables\n## Select the dataset of interest\n1dataset_sel = \"population\"\n# Para ver as possibilidades, digite  ?censobr::data_dictionary no console e veja o argumento \"dataset\". Ali podem ser vistas as bases disponibiizadas pelo pacote (\"population\", \"households\", \"families\", \"mortality\", \"emigration\", \"tracts\")\n\n## See the variable dictionary\n2data_dictionary(year = census_year, dataset = dataset_sel)\n # Possibilities: 1960, 1970, 1980, 1991, 2000, 2010. See: https://ipeagit.github.io/censobr/articles/censobr.html\n\n\n1\n\nDefina qual base dos microdados será utilizada;\n\n2\n\nBaixe o dicionário de variáveies da base selecionada;\n\n\n\n\nObservando-se o dicionário de variáveis, algumas variáveis foram escolhidas (ver o quadro a seguir). Primando pela concisão, os critérios para a seleção foram a escala de interesse (V0011) e os limites político-administrativos do dado (V0001 e V0002); a geração da estimativa do número de pessoas (V0010); a possibilidade de ligação dessa base com as demais bases dos microdados (V0300) e, por fim, a inclusão da questão a ser analisada, raça (V0606), a qual se acrescentou o genêro (V0601).\n\n\n\nCódigo das variáveis\nNomenclatura\n\n\n\n\nV0001\nUnidade da Federação (UF)\n\n\nV0002\nCód. do município\n\n\nV0011\nÁrea de ponderação\n\n\nV0300\nVariável de controle\n\n\nV0010\nPeso amostral\n\n\nV0606\nRaça ou Cor\n\n\nV0601\nSexo\n\n\n\n\n# Choose the population variables of interest \nvar_cens_pop &lt;- c(\"V0001\", \"V0002\", \"V0011\", \"V0300\", \"V0010\", \"V0606\", \"V0601\")\n\nEscolhidas as variáveis, o passo seguinte consiste em obter os dados propriamente ditos (“baixá-los” para a sessão atual do R). Ao realizar essa tarefa, alguns avisos podem ser gerados. Não se preocupe, porém. A partir da leitura dos avisos, verifica-se que as mensagens geradas não se referem a um erro, mas sim a uma série de orientações padrão.\nRegistre-se, em tempo, que após realizar todo o procedimento de acesso e manipulação para o ano de 2010, adiante o mesmo caminho será replicado com os dados dos censos de 2000 e 1991.\nCRIAR UMA CAIXA A PARTE: Os dados da amostra do censo demográfico brasileiro costumam ser grandes e pesados, o que implica em um uso bastante intenso da memória RAM. Para lidar com esse comportamento do R (alocação dos dados na memória RAM), uma estratégia interessante é adotada pelo CENSOBR: preparar/estruturar o cômputo e gerá-lo apenas quando ele for explicitamente solicitado (mais detalhes podem ser vistos aqui).\n\n# Download and Select the variables of interest from POP MICRODATA, including RACE\nmicro_pop_orig &lt;- read_population(year = census_year, columns = var_cens_pop) # 1) if the downloading was stopped before finishing, use \"censobr::censobr_cache(delete_file = \"2000_population_v0.3.0.parquet\")\" to exclude it from your computer before running the code again; 2) for the 2010 census, the argument 'add_labels = \"pt\"' transform the categories codes of variabels into its labels.\n\n\n# Compute the total population for the municipality, weighting area (AP) and household by race\n## Select the municipality of interest and load the pop data\n1micro_pop &lt;- micro_pop_orig |&gt;\n2  filter(V0001 == \"35\" & V0002 == \"50308\") |&gt;\n3  collect() |&gt;\n  # mutate(V0624 = as.numeric(V0624)) |&gt;\n4  clean_names()\n\n5glimpse(micro_pop)\n\n\n1\n\nSelecione a base de dados de interesse e crie um novo objeto para armazenar o resultado das operações a seguir;\n\n2\n\nFiltre os dados, escolhendo apenas os que se referem ao município de São Paulo;\n\n3\n\n“Traga” os dados para a sessão atual do R;\n\n4\n\nUniformize o nome das variáveis (padrão adotado: letras mínusculas, com o espaço entre as palavras preenchido pelo símbolo “_”), e,\n\n5\n\nObserve o resultado gerado.\n\n\n\n\nRows: 552,037\nColumns: 7\n$ v0001 &lt;chr&gt; \"35\", \"35\", \"35\", \"35\", \"35\", \"35\", \"35\", \"35\", \"35\", \"35\", \"35\"…\n$ v0002 &lt;chr&gt; \"50308\", \"50308\", \"50308\", \"50308\", \"50308\", \"50308\", \"50308\", \"…\n$ v0011 &lt;chr&gt; \"3550308005001\", \"3550308005001\", \"3550308005001\", \"355030800500…\n$ v0300 &lt;dbl&gt; 6965, 6965, 6965, 6965, 7117, 7117, 7117, 7117, 48707, 48707, 48…\n$ v0010 &lt;dbl&gt; 12.9312, 12.9312, 12.9312, 12.9312, 10.5984, 10.5984, 10.5984, 1…\n$ v0606 &lt;chr&gt; \"1\", \"4\", \"4\", \"4\", \"1\", \"1\", \"1\", \"4\", \"1\", \"1\", \"1\", \"3\", \"1\",…\n$ v0601 &lt;chr&gt; \"2\", \"1\", \"2\", \"1\", \"2\", \"1\", \"1\", \"1\", \"2\", \"1\", \"1\", \"1\", \"2\",…\n\n\nA partir do resultado obtido e da padronização adotada pelas funções do Tidyverse, é possível observar rapidamente a estrutura da tabela (552307 linhas/observações e 7 colunas/variáveis), o tipo de dado presente em cada coluna, bem como os primeiros valores para cada uma das variáveis."
  },
  {
    "objectID": "blog/04-post/Raca_cor_sp.html#analisando-os-dados-um-retrato-para-a-escala-municipal.",
    "href": "blog/04-post/Raca_cor_sp.html#analisando-os-dados-um-retrato-para-a-escala-municipal.",
    "title": "Raça ou cor em São Paulo - uma leitura a partir dos microdados censitários",
    "section": "",
    "text": "Com os dados em mãos, a investigação propriamente dita sobre o comportamento da questão racial pode ir adiante. Nesse sentido, inicialmente será computada a distribuição da variável raça/cor para todo o município. Em seguida, o mesmo procedimento será realizado, mas dessa vez considerando-se a escala de maior detalhe do dado: a área de ponderação. Nesse momento, procurar-se-á entender como a distribuição da raça/cor se dá em diferentes regiões do território paulistano. Por fim, serão identificadas e analisadas as áreas de ponderação que abrangem a região de interesse - e que serão descobertas mais à frente.\nA seguir, inicia-se o cômputo para o município, como um todo. Para facilitar a interpretação, algumas transformações são realizadas na base (conversão de tipos de dados e criação de novas variáveis, por ex.).\n\n# Compute the RACE distribution by MUN\n1race_by_mun_2010 &lt;- micro_pop |&gt;\n  mutate(\n    v0606 = factor(v0606),\n    raca_cor_nome = factor(case_when(\n      v0606 == 1 ~ \"Branca\",\n      v0606 == 2 ~ \"Preta\",\n      v0606 == 3 ~ \"Amarela\",\n      v0606 == 4 ~ \"Parda\",\n      v0606 == 5 ~ \"Indígena\", \n      v0606 == 9 ~ \"Ignorado\")) \n2        ) |&gt;\n3  group_by(v0606, raca_cor_nome) |&gt;\n4  summarise(tot_peop_peso = sum(v0010),  tot_peop_orig = dplyr::n()) |&gt;\n5  rename(raca_cor = v0606) |&gt;\n6  ungroup() |&gt;\n7  mutate(prop_race = 100* tot_peop_peso/sum(tot_peop_peso))\n\n# See the result\n8race_by_mun_2010\n\n\n1\n\nSelecione a base e crie um objeto para guardar as informações sobre raça/cor em todo o município de São Paulo;\n\n2\n\nTransforme o tipo da variável raça/cor (de character para fator) e crie uma nova variável (coluna). Neste caso, as categorias de raça/cor são codificadas com nomes (preta, indígena, branca, etc.), e não mais números;\n\n3\n\nDefina cada uma das raças/cores como grupos para as operações a seguir;\n\n4\n\nCompute as estimativas da população (tot_peop_peso) e o número de casos amostrados por grupo criado;\n\n5\n\nRenomeie a variável original de raça/cor (v0606);\n\n6\n\nDesagrupe os dados (caso queira entender o impacto desse passo, acrescente o símbolo de comentário no inicío dessa linha (“#”), indicando para o R que o dado deve continuar agrupado; rode o código e veja o resultado produzido);\n\n7\n\nCompute as proporções de pessoas para cada raça/cor e\n\n8\n\nObserve o resultado (quantidade e proporção de pessoas para cada raça/cor)\n\n\n\n\nOs dados gerados permitem que se construa um primeiro retrato sobre o total de pessoas por raça/cor no município de São Paulo em 2010.\nCRIAR UMA CAIXA A PARTE: Tão relevante quanto a geração de dados é a comunicação dos achados - algo que, aos poucos e na medida do possível, será explorado no presente texto. Isso porque, caso a sua publicização não seja adequada, o impacto gerado, na melhor das hipóteses, deixará de atingir toda a sua potencialidade. Ou seja, não desconsidere esse fator!\nA seguir, uma nova versão da tabela recém-criada é apresentada. Nela, como pode ser visto, existem menos variáveis, os nomes das variáveis são mais intuitivos (facilitando a leitura), os dados foram reordenados - do grupo com mais pessoas para o que possui menos - e ela é esteticamente mais atraente. Tais medidas, facilmente implementadas, ajudam a manter o foco do leitor no que realmente importa e facilitam a leitura e compreensão dos dados.\n\n# Adjust and make a new table \n1race_by_mun_2010 |&gt;\n2  select(raca_cor_nome, tot_peop_peso, prop_race) |&gt;\n3  rename(\"Raça ou cor\" = raca_cor_nome, \"Total de pessoas\" = tot_peop_peso, \"Proporção (%)\" = prop_race) |&gt;\n4  mutate(across(.cols = `Total de pessoas`, round)) |&gt;\n5  arrange(desc(`Proporção (%)`)) |&gt;\n6  gt()\n\n\n1\n\nSelecione a base de dados gerada;\n\n2\n\nEscolha apenas as variáveis de interesse;\n\n3\n\nRenomeie as variáveis;\n\n4\n\nArrendonde os valores referentes ao total de pessoas;\n\n5\n\nOrdene os dados da maior proporção de pessoas para a menor, e,\n\n6\n\nGere uma tabela mais visualmente atrativa;\n\n\n\n\n\n\n\n\n\n\nRaça ou cor\nTotal de pessoas\nProporção (%)\n\n\n\n\nBranca\n6823004\n60.630044\n\n\nParda\n3447290\n30.633035\n\n\nPreta\n717215\n6.373257\n\n\nAmarela\n250146\n2.222825\n\n\nIndígena\n12959\n0.115152\n\n\nIgnorado\n2891\n0.025688\n\n\n\n\n\n\n\nOutra forma bastante interessante para a visualização de dados e compreensão daquilo que se quer entender baseia-se no uso de gráficos. Para o presente caso, a opção mais apropriada seria o gráfico de barras. E como forma de explorar parte dos elementos que podem compô-lo, optou-se por i) adotar um título, subtítulo e fonte, e, ii) modififcar os valores dos eixos e a cor de fundo. Saliente-se, porém, que o uso de cor fazendo referência às raças ou mesmo o título adotado (mais descritivo e geral) poderiam seguir estratégias distintas e talvez mais interessantes, a depender do contexto e objetivo perseguidos - enfatizando o grupo de interesse, por exemplo4.\n\n# Create a graphic for the race distribution\n## Parameters to reuse\ntitle_grap =  \"Distribuição de pessoas por cor ou raça\"\nsubtitle_grap =  \"Município de São Paulo, 2010\"\ndata_orig_grap = \"IBGE, Censo 2010\"\n# ap_sel &lt;- c(3550308005001, 3550308005007, 3550308005008)\n\n## Municipality\n1race_mun_graph &lt;- race_by_mun_2010 |&gt;\n2  ggplot(aes(x = fct_reorder(raca_cor_nome, tot_peop_peso, .desc = T), y = tot_peop_peso, fill = raca_cor_nome)) +\n3    geom_col(show.legend = F) +\n    geom_text(aes(\n      label = round(tot_peop_peso)),\n      vjust = - 0.5,\n      hjust = 0.5,\n      size = 4,\n      fontface = \"bold\",\n      # colour = \"#3b3938\"\n4      ) +\n    geom_text(aes(\n      label = str_c(\"(\", round(prop_race, 2), \"%)\")),\n      vjust = 1.25,\n      hjust = 0.5,\n5      size = 3.5) +\n    labs(title = title_grap,\n       subtitle = subtitle_grap,\n       caption = data_orig_grap,\n       # x = \"(Cor ou raça)\",\n       # y = \"(Número de pessoas)\"\n6       )  +\n7  scale_fill_manual(values = c(\"yellow\", \"#fee6ce\", \"lightgrey\", \"#bf812d\", \"#8c510a\", \"#5e3814\")) +\n  scale_y_continuous(breaks = c(0, 2000000, 4000000, 6000000),\n8                    labels = c(\"0\", \"2 Mi\", \"4 Mi\", \"6 Mi\")) +\n  # scale_fill_viridis_d(direction = 1) +\n9  theme_classic(base_size = 14) +\n  theme(\n    axis.ticks.x = element_blank(),\n    # axis.text.x = element_blank(),\n    axis.ticks.y = element_blank(),\n    # axis.text.y = element_blank(),\n    axis.title = element_blank() # element_text(colour = \"grey\", size = 7.5))  \n    )\n\n# Look the graphic\n10race_mun_graph\n\n\n1\n\nDefina qual será a base utilizada para a criação do gráfico e crie um objeto para salvar o resultado gerado a seguir;\n\n2\n\nSelecione quais variáveis serão expostas no gráfico (eixos x e y);\n\n3\n\nEscolha o gráfico de barras como opção de representação;\n\n4\n\nDefina a localização dos totais de pessoas nas barras;\n\n5\n\nDefina a localização da proporção de pessoas nas barras;\n\n6\n\nDefina quais serão o título, subtítulo e fonte;\n\n7\n\nDefina cores específicas para cada uma das raças (barras);\n\n8\n\nDefina novos intervalos para o eixo y (total de pessoas);\n\n9\n\nEscolha como o fundo e os elementos dos eixos devem ser visualizados, e,\n\n10\n\nApresente o gráfico.\n\n\n\n\n\n\n\n\n\n\n\nA partir do gráfico, verifica-se, por exemplo, que cerca de 3/5 (60,6%) da população paulistana se autodeclarou branca em 2010. A população negra (parda + preta), por sua vez, respondeu por 37% de todos os paulistanos e paulistanas. No extremo oposto encontram-se as pessoas direta ou indiretamente vinculadas aos povos asiáticos (amarelos) e à população indígena. Presentes em nosso território antes da colonização europeia, os povos originários do Brasil representavam apenas 0,1% dos e das paulistanas em 2010, perfazendo quase treze mil pessoas."
  },
  {
    "objectID": "blog/04-post/Raca_cor_sp.html#analisando-os-dados-avançando-no-entendimento-sobre-a-distribuição-da-raçacor-nas-diferentes-partes-do-território-municipal",
    "href": "blog/04-post/Raca_cor_sp.html#analisando-os-dados-avançando-no-entendimento-sobre-a-distribuição-da-raçacor-nas-diferentes-partes-do-território-municipal",
    "title": "Raça ou cor em São Paulo - uma leitura a partir dos microdados censitários",
    "section": "",
    "text": "De forma a aprofundar o conhecimento sobre a área de interesse aqui tratada, localizada na região da Liberdade, a seguir será explorada a distribuição da raça/cor por área de ponderação. Ao revisitar a temática em uma escala mais detalhada, comparações entre regiões tornam-se possíveis, com novos subsídios e/ou padrões podendo ser revelados.\nIsso posto, o código a seguir gera a distribuição da população paulista por raça/cor para cada uma das áreas de ponderação do município de São Paulo.\n\n# Compute the RACE distribution by AP\nrace_by_ap_2010 &lt;- micro_pop |&gt;\n  mutate(v0606 = factor(v0606),\n         v0011 = factor(v0011)\n         ) |&gt;\n  group_by(v0011, v0606, .drop = FALSE) |&gt; \n  summarise(tot_peop_peso = sum(v0010), tot_peop = n()) |&gt;\n  mutate(prop_race = 100*tot_peop_peso/sum(tot_peop_peso),\n         raca_cor_nome = factor(case_when(\n           v0606 == 1 ~ \"Branca\",\n           v0606 == 2 ~ \"Preta\",\n           v0606 == 3 ~ \"Amarela\",\n           v0606 == 4 ~ \"Parda\",\n           v0606 == 5 ~ \"Indígena\",\n           v0606 == 9 ~ \"Ignorado\"))\n         ) |&gt; \n  relocate(ap = v0011, raca_cor = v0606, raca_cor_nome) \n\n`summarise()` has grouped output by 'v0011'. You can override using the\n`.groups` argument.\n\n# Show the result\nrace_by_ap_2010\n\n# A tibble: 1,860 × 6\n# Groups:   ap [310]\n   ap            raca_cor raca_cor_nome tot_peop_peso tot_peop prop_race\n   &lt;fct&gt;         &lt;fct&gt;    &lt;fct&gt;                 &lt;dbl&gt;    &lt;int&gt;     &lt;dbl&gt;\n 1 3550308005001 1        Branca               13619.      710     57.6 \n 2 3550308005001 2        Preta                  978.       49      4.14\n 3 3550308005001 3        Amarela               1921.       95      8.12\n 4 3550308005001 4        Parda                 7133.      359     30.2 \n 5 3550308005001 5        Indígena                 0         0      0   \n 6 3550308005001 9        Ignorado                 0         0      0   \n 7 3550308005002 1        Branca               15653.      764     69.9 \n 8 3550308005002 2        Preta                 1360.       62      6.07\n 9 3550308005002 3        Amarela                588.       26      2.63\n10 3550308005002 4        Parda                 4786.      240     21.4 \n# ℹ 1,850 more rows\n\n\nO resultado produzido está no que se costuma chamar de base ou tabela de forma longa. Mais adequada para a manipulação dos dados, percebe-se que para cada área de ponderação são apresentadas todas as categorias da variável raça/cor, dispostas verticalmente, bem como seus valores. Tomando-se como exemplo a primeira área de ponderação, 3550308005001, verifica-se que a primeira linha é destinada à raça branca, a segunda à preta, a terceira à amarela e assim por diante. Essa disposição é, então, retomada quando se inicia a segunda área de ponderação, 3550308005002, com a linha sete apresentando os dados para a raça branca, a linha oito para a raça preta, etc. Tal forma, saliente-se, nem sempre facilita a visualização e o entendimento do que se quer investigar.\nTendo isso em vista, a seguir os mesmos dados serão apresentados a partir da chamada forma longa. Como poderá ser visto, dessa vez cada área de ponderação ocupa apenas uma linha da tabela. As categorias da variável raça/cor, por sua vez, são transpostas para as colunas.\n\n# Transpose the data into a wider table   \n1race_by_ap_2010_wider &lt;- race_by_ap_2010 |&gt;\n2  pivot_wider(id_cols = ap, names_from = raca_cor, values_from = c(tot_peop_peso, prop_race)) |&gt;\n3  set_names(\"ap\", \"branca\", \"preta\", \"amarela\", \"parda\", \"indigena\", \"ignorado\", \"branca_prop\",  \"preta_prop\", \"amarela_prop\", 'parda_prop',  \"indigena_prop\", \"ignorado_prop\") |&gt;\n4  relocate(\"ap\", \"branca\",  \"parda\", \"preta\", \"amarela\", \"indigena\", \"ignorado\", \"branca_prop\", 'parda_prop',  \"preta_prop\", \"amarela_prop\",  \"indigena_prop\", \"ignorado_prop\") |&gt;\n5  ungroup()\n\n# See the first version of the wider table\n6race_by_ap_2010_wider\n\n# Look only to the number of people (absolute values) by AP and race\n7head(race_by_ap_2010_wider[1:7], n = 10) |&gt;\n  mutate(across(.cols = !ap, .fns = round)) |&gt; \n  rename(Branca = branca, Parda = parda, Preta = preta, Amarela = amarela, `Indígena` = indigena, Ignorado = ignorado) |&gt; \n  gt(rowname_col = \"ap\")\n\n# Now consider only the proportion of people (relative values) by AP and race\n8head(race_by_ap_2010_wider[c(1, 8:13)], n = 10) |&gt;\n  rename(`Branca (%)` = branca_prop, `Parda (%)` = parda_prop, `Preta (%)` = preta_prop, `Amarela (%)` = amarela_prop, `Indígena (%)` = indigena_prop, `Ignorado (%)` = ignorado_prop) |&gt;\n  gt(rowname_col = \"ap\")\n  \n# write_csv2(race_by_ap_2010_wider, file = here(file.path(\"2010\", \"Gerados\", \"Tabelas\", \"raca_ap_sp_2010.csv\")))\n\n\n1\n\nSelecione a base e crie um objeto para salvar os dados em formato longo;\n\n2\n\nTransforme as categorias da variável raça/cor, originalmente empilhadas, em colunas;\n\n3\n\nAdote novos nomes (mais intuitivos) para as colunas;\n\n4\n\nMude a ordem das colunas;\n\n5\n\nDesagrupe os dados;\n\n6\n\nObserve os dados dispostos na nova forma e note que a base apresenta tanto os dados absolutos quanto os relativos;\n\n7\n\nObserve os resultados para as dez primeiras áreas de ponderação, considerando apenas o número de pessoas (volume) para cada cor/raça (perceba o arredondamento dos valores praticado), e,\n\n8\n\nObserve os resultados para as dez primeiras áreas de ponderação, mas agora considerando apenas a proporção de pessoas para cada cor/raça.\n\n\n\n\n# A tibble: 310 × 13\n   ap        branca parda preta amarela indigena ignorado branca_prop parda_prop\n   &lt;fct&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt;      &lt;dbl&gt;\n 1 35503080… 13619. 7133.  978.   1921.      0          0        57.6       30.2\n 2 35503080… 15653. 4786. 1360.    588.      0          0        69.9       21.4\n 3 35503080… 22803. 8443. 1531.   1644.    171.         0        65.9       24.4\n 4 35503080… 17379. 8837. 1622.   5675.    379.         0        51.3       26.1\n 5 35503080… 18996. 8334. 1049.    829.     56.5        0        64.9       28.5\n 6 35503080… 27442. 6309. 1212.   1962.     22.7        0        74.3       17.1\n 7 35503080… 28848. 4790. 1045.   5697.     20.0        0        71.4       11.9\n 8 35503080… 16871. 4180.  676.   6940.     25.4        0        58.8       14.6\n 9 35503080… 13897. 3394.  680.    610.     25.3        0        74.7       18.2\n10 35503080… 22012. 4791. 1412.   2564.      0          0        71.5       15.6\n# ℹ 300 more rows\n# ℹ 4 more variables: preta_prop &lt;dbl&gt;, amarela_prop &lt;dbl&gt;,\n#   indigena_prop &lt;dbl&gt;, ignorado_prop &lt;dbl&gt;\n\n\n\n\n\n\n\n\n\nBranca\nParda\nPreta\nAmarela\nIndígena\nIgnorado\n\n\n\n\n3550308005001\n13619\n7133\n978\n1921\n0\n0\n\n\n3550308005002\n15653\n4786\n1360\n588\n0\n0\n\n\n3550308005003\n22803\n8443\n1531\n1644\n171\n0\n\n\n3550308005004\n17379\n8837\n1622\n5675\n379\n0\n\n\n3550308005005\n18996\n8334\n1049\n829\n57\n0\n\n\n3550308005006\n27442\n6309\n1212\n1962\n23\n0\n\n\n3550308005007\n28848\n4790\n1045\n5697\n20\n0\n\n\n3550308005008\n16871\n4180\n676\n6940\n25\n0\n\n\n3550308005009\n13897\n3394\n680\n610\n25\n0\n\n\n3550308005010\n22012\n4791\n1412\n2564\n0\n0\n\n\n\n\n\n\n\n\n\n\n\n\nBranca (%)\nParda (%)\nPreta (%)\nAmarela (%)\nIndígena (%)\nIgnorado (%)\n\n\n\n\n3550308005001\n57.584\n30.160\n4.1356\n8.1202\n0.000000\n0\n\n\n3550308005002\n69.919\n21.378\n6.0749\n2.6286\n0.000000\n0\n\n\n3550308005003\n65.917\n24.407\n4.4265\n4.7538\n0.495077\n0\n\n\n3550308005004\n51.278\n26.075\n4.7846\n16.7437\n1.118900\n0\n\n\n3550308005005\n64.910\n28.479\n3.5859\n2.8323\n0.193212\n0\n\n\n3550308005006\n74.273\n17.075\n3.2793\n5.3109\n0.061323\n0\n\n\n3550308005007\n71.406\n11.857\n2.5855\n14.1019\n0.049623\n0\n\n\n3550308005008\n58.802\n14.567\n2.3558\n24.1863\n0.088484\n0\n\n\n3550308005009\n74.692\n18.239\n3.6551\n3.2777\n0.136077\n0\n\n\n3550308005010\n71.515\n15.566\n4.5888\n8.3301\n0.000000\n0\n\n\n\n\n\n\n\nA partir das últimas tabelas, que apresetam os valores absolutos (número total/volume/montante de pessoas) e relativos (proporção de pessoas), verifica-se uma disposição dos dados mais amigável. Um desafio persiste, porém: o município de São Paulo é composto por 310 áreas de ponderação. Ou seja, a tabela é constituída por 310 linhas, tornando a apreensão do todo difícil.\nEm situações desse tipo, com bases de dados extensas, usualmente recorre-se a estratégias para sintetizá-los e explicitar eventuais padrões. Uma delas, inclusive, já foi explorada: o uso de ferramentas baseadas em visualização de dados, como os gráficos. A ela, some-se a geração de medidas síntese de localização, tal qual a famigerada média, e de dispersão, dentre as quais pode ser citado o desvio padrão.\nA seguir, dois tipos de gráficos (“pontos” e”boxplot + violino”) e uma tabela (composta por medidas de resumo) serão apresentados. Mais do que replicar as mesmas informações em formatos distintos, o qeu se pretende é que eles se complementem e possibilitem uma leitura mais rica e acurada. Iniciando a exploração com os gráficos, forma mais intuitiva, almeja-se verificar se alguns indícios ou padrões revelam-se a partir de uma análise visual. A partir das intuições encontradas e/ou questionamentos levantados, em um segundo momento serão computados elementos “mais precisos” (estatísticas) para uma melhor descrição e caracterização da distribuição espacial da raça/cor (apresentados na tabela).\n\n# Create a graphic representing the race distribution with a dot plot (here, some noise is added)\ngraf_race_ap_2010_pnt0 &lt;- race_by_ap_2010 |&gt;\n  ggplot(aes(x = fct_rev(fct_reorder(raca_cor_nome, tot_peop_peso, median)), y = tot_peop_peso)) +\n    geom_point(alpha = 0.4, shape = 1) + \n    labs(x = NULL,\n         y = NULL) +\n    theme_classic(base_size = 14) +\n    theme(\n      # axis.ticks.x = element_blank(),\n      axis.ticks.y = element_blank()) +\n  coord_flip()\n\n\n# Create a graphic representing the race distribution with a dot plot\n1graf_race_ap_2010_pnt &lt;- race_by_ap_2010 |&gt;\n2  ggplot(aes(x = fct_rev(fct_reorder(raca_cor_nome, tot_peop_peso, median)), y = tot_peop_peso)) +\n3    geom_point(position = 'jitter', alpha = 0.4, shape = 1) +\n    labs(x = NULL,\n4         y = NULL) +\n5    theme_classic(base_size = 14) +\n    theme(\n      # axis.ticks.x = element_blank(),\n      axis.ticks.y = element_blank()) +\n6  coord_flip()\n\n# Create a graphic representing the race distribution with a violin and boxplot\ngraf_race_ap_2010_res &lt;- race_by_ap_2010 |&gt;\n  ggplot(aes(x = fct_rev(fct_reorder(raca_cor_nome, tot_peop_peso, median)), y = tot_peop_peso)) +\n    geom_boxplot() +\n    geom_violin(scale = \"width\", fill = NA, color = \"darkorange\", alpha = 0.7) +\n    labs(x = NULL,\n         y = NULL) +\n    theme_classic(base_size = 14) +\n    theme(\n      # axis.ticks.x = element_blank(),\n      axis.ticks.y = element_blank()) +\n  coord_flip()\n    \n\n# Plot and compare both graphics\n7(graf_race_ap_2010_pnt0 / graf_race_ap_2010_pnt / graf_race_ap_2010_res)\n\n\n1\n\nSelecione a base de dados e crie um objeto para salvar o gráfico;\n\n2\n\nDefina quais serão as variáveis que aparecerão no gráfico;\n\n3\n\nEscolha o tipo de gráfico/representação dos dados. Note: nos dois primeiros casos, gera-se um gráfico de pontos, com os dados do segundo levemente deslocados. Já no segundo apresenta-se uma sobreposição entre o gráfico de violino e boxplot;\n\n4\n\nExclua o nome dos eixos dos gráficos;\n\n5\n\nDefina alguns elementos visuais do gráfico, como o tamanho das letras, a cor do fundo e a exclusão dos pequenos traços que ligam os valores aos eixos;\n\n6\n\nInverta o eixo dos gráficos, e,\n\n7\n\nDefina a ordem em que os gráficos serão dispostos.\n\n\n\n\n\n\n\n\n\n\n\nComo pode ser visto, três gráficos são apresentados. Note-se, contudo, que tanto o primeiro quanto o segundo tratam de um mesmo tipo de representação (gráfico de pontos). Neles, os pontos indicam qual é a população total de cada uma das áreas de ponderação por raça/cor - a diferença, aqui explorada para fins didáticos, reside no fato do segundo gráfico apresentar dados ligeiramente deslocados de seu valor real, uma técnica usada para facilitar a análise e a apreensão de padrões.\nObervando-se a localização dos pontos, verifica-se, por exemplo, que enquanto as populações preta, indígena e amarela apresentam valores mais concentrados (maior número de pontos próximos e/ou sobrepostos, reforçando a cor preta), no caso das populações pardas e branca o total de pessoas nas áreas de ponderação está mais disperso (há uma maior variabilidade).\nConsiderando-se essa mesma separação, é seguro afirmar que nenhuma área de ponderação (ponto preto) possui 10.000 habitantes pretos, indígenas ou amarelos - limiar ultrapassado pelos residentes brancos e pardos em várias áreas de ponderaçao. Também é possível notar que, diferentemente de todas as outra populações, as áreas de ponderação com o menor número de pessoas brancas somam cerca de 10.000 pessoas - exceção feita a dois casos.\nO segundo gráfico, composto pela sobreposição entre o gráfico de violino (linha tracejada e laranja) e o boxplot , busca criar outro tipo de representação sobre a distribuição da população, por raça/cor, nas áreas de ponderação. Iniciando a leitura pelo boxplot, destaque-se que alguns elementos dessa representação costumam ser sempre observados. Um deles é a sua caixa, que perfaz a metade central de todo o conjunto dos dados. Com isso, é possível estimar para o caso da população branca que 50% das áreas onde essas pessoas residem variam de pouco mais de 16.000 pessoas a 26.000 (não se preocupe com a precisão nesse momento, pois os números corretos serão observados na tabela que será produzida a seguir). Já no caso da população parda esses valores parecem variar entre 5.000 e 15.000 pessoas.\nO boxplot fornece, ainda, ao menos duas outras informações interessantes. A primeira diz respeito à linha vertical central da caixa, que indica onde se encontra a mediana. Ordenando-se os totais das populações do menor para o maior valor, a mediana é o valor que divide o conjunto de dados ao meio5. No caso da população preta, por exemplo, esse valor parece estar próximo a 2.500 pessoas. A outra informação de interesse está relacionada aos pontos que aparecem para algumas raças/cores. Neste caso, eles indicam as áreas de ponderação cuja população é muito diferente de todo o restante - esses casos são chamados de pontos discrepantes ou outliers. Percebe-se, por exemplo, que a raça amarela possui algumas áreas de ponderação com uma população muito maior do que o comportamento geral para essa raça no município. Já no extremo oposto encontra-se a populaçao preta, que não apresenta nenhuma área de ponderação que foge do comportamento geral dessa raça/cor.\nComplementando os achados do boxplot, novos elementos obtidos por meio do gráfico de violino podem ser acrescentados. Ao representar de forma mais contínua a distribuição das populações por raça/cor e área de ponderação, é possível notar, por exemplo, que a população parda apresenta dois pequenos picos, um logo abaixo de 5.000 pessoas e outro em torno de 14.000 pessoas. As populações preta e branca, por sua vez, parecem apresentar um único pico.\nDe forma a checar e, se for o caso, tornar mais precisos os indícios, intuições e questões gerados a partir da visualização dos dados, a seguir serão computadas algumas estatísticas para cada uma das raças. Os resultados obtidos são agrupados em uma mesma tabela.\n\n# Compute some metrics to describe the data\n## Compute the measures by race\n1branca_mtrc &lt;- summary(race_by_ap_2010_wider$branca)\nparda_mtrc &lt;- summary(race_by_ap_2010_wider$parda)\npreta_mtrc &lt;- summary(race_by_ap_2010_wider$preta)\namarela_mtrc &lt;- summary(race_by_ap_2010_wider$amarela)\nindigena_mtrc &lt;- summary(race_by_ap_2010_wider$indigena)\nignorado_mtrc &lt;- summary(race_by_ap_2010_wider$ignorado)\n\n## Create a table with all race metrics\n2bind_rows(branca_mtrc, parda_mtrc, preta_mtrc, amarela_mtrc, indigena_mtrc, ignorado_mtrc) |&gt;\n3  as.data.frame() |&gt;\n  mutate(raca_cor = c(\"Branca\", \"Parda\", \"Preta\", \"Amarela\", \"Indigena\", \"Ignorado\"),\n4         across(.cols = !raca_cor, .fns = round)) |&gt;\n5  relocate(raca_cor) |&gt;\n6  set_names(\"Raça ou cor\", \"Menor valor\", \"1o. Quartil\", \"Mediana\", \"Média\", \"3o. Quartil\", \"Maior valor\") |&gt;\n  gt(rowname_col = \"Raça ou cor\")\n\n\n1\n\nCompute algumas métricas para cada uma das raças/cores;\n\n2\n\nJunte todas as métricas calculadas (“colando” as linhas);\n\n3\n\nTransforme a junção anterior em um data.frame (“tabela”);\n\n4\n\nAcrescente uma variável para a raça/cor e arredonde os valores da população;\n\n5\n\nColoque a variável raça/cor na primeira posição da base, e,\n\n6\n\nDefina nomes mais intuitivos para as variáveis.\n\n\n\n\n\n\n\n\n\n\n\nMenor valor\n1o. Quartil\nMediana\nMédia\n3o. Quartil\nMaior valor\n\n\n\n\nBranca\n4160\n17078\n21362\n22010\n26572\n42376\n\n\nParda\n720\n5276\n11051\n11120\n15784\n30592\n\n\nPreta\n82\n1274\n2264\n2314\n3186\n6208\n\n\nAmarela\n19\n238\n494\n807\n941\n6940\n\n\nIndigena\n0\n0\n22\n42\n48\n1005\n\n\nIgnorado\n0\n0\n0\n9\n0\n1231\n\n\n\n\n\n\n\nA partir dos valores da tabela, verifica-se que as percepções obtidas por meio dos gráficos é corroborada pelos números. Um dos achados indicava, por exemplo, uma maior concentração dos valores das populações preta, amarela e indígena por área de ponderação - indicando, a grosso modo, que a distribuição dessas raças ao longo do território era mais parecido (ou menos diferente) do que o encontrado para as raças brancas e parda. Recorrendo-se ao Intervalo Interquaril (IQR)para quantificar esse comportamento6, constata-se que a diferença das populações por área de ponderação para as raças branca e preta é de 9.494 e 10.508 pessoas, respectivamente. Por sua vez, ao se considerar as populações preta, amarela e indígena, essa diferença é de 1.912, 703 e 48 pessoas. Ou seja, mesmo considerando-se a diferença entre a população branca (menor valor do grupo mais disperso, de acordo com o IQR) e a população preta (maior valor do grupo mais concentrado), a dispersão ou variabilidade é cinco vezes maior a favor da raça branca (9.494 pessoas brancas/1.912 pessoas pretas).\nObservando-se as menores quantidades de pessoas por raça/cor presentes nas áreas de ponderação (coluna “Menor valor” da tabela), percebe-se que enquanto existe ao menos uma área de ponderação que não possui indígenas - valor que salta para ao menos 25% das áreas de ponderação, dado que o valor do 1º quartil é 0 -, o menor número de pessoas brancas em uma área de ponderação no município é de 4.160. Esse valor, note-se, é maior do que o encontrado em ao menos 75% de todas as áreas de ponderação para as raças/cores preta, amarela e indígena (ver a coluna do 3º quartil).\nEm sentido oposto, ao se considerarem as maiores quantidades de pessoas por raça/cor e área de ponderação, agora é possível mensurar e identificar as áreas que possuem as maiores populações preta (6.208 pessoas), amarela (6.940) e indígena (1.005). Dado que a simples comparação desse valor com o do 3º quartil para cada uma dessas raças/cores indica uma diferença não desprezível, pode-se aventar ou suspeitar que algo ocorreu/ocorre nessas porções do território, fomentando essa concentração espacial.\nOperando-se de forma similar, verifica-se que as estatísticas da tabela especificam as medidas anteriormente obtidas por meio dos gráficos. Dessa forma, as aproximações geradas para os percentis 25º e 75º (medidas limites da caixa do boxplot), bem como para o 50º (mediana), agora são mensuradas e localizadas de forma mais precisa.\nDe forma a finalizar essa etapa de “contextualização regional”, a seguir duas estratégias serão rapidamente apresentadas. rapidamenteidentificadas as áreas de ponderação que apresentam as maiores populaçãoes preta e parda no município, considerando-se tanto os valores absolutos (número total de pessoas) quantos os relativos.\n\n# Select only the absolute values and rank all the race categories\nrace_by_ap_2010_wider_pos_abs &lt;- race_by_ap_2010_wider |&gt; \n  select(!ends_with(\"_prop\")) |&gt; \n  mutate(total = branca + parda + preta + amarela + indigena + ignorado, \n         branca_rank = min_rank(desc(branca)),\n         parda_rank = min_rank(desc(parda)),\n         preta_rank = min_rank(desc(preta)),\n         amarela_rank = min_rank(desc(amarela)),\n         indigena_rank = min_rank(desc(indigena)),\n         total_rank = min_rank(desc(total))) |&gt; \n  arrange(desc(total))\n\n# Select only the proportion values and rank all the race categories\nrace_by_ap_2010_wider_pos_prop &lt;- race_by_ap_2010_wider |&gt; \n  select(ap, ends_with(\"_prop\")) |&gt; \n  left_join(race_by_ap_2010_wider_pos_abs[c(\"ap\", \"total\")], join_by(ap)) |&gt;\n  relocate(.after = ignorado_prop, total) |&gt;   \n  mutate(branca_prop_rank = min_rank(desc(branca_prop)),\n         parda_prop_rank = min_rank(desc(parda_prop)),\n         preta_prop_rank = min_rank(desc(preta_prop)),\n         amarela_prop_rank = min_rank(desc(amarela_prop)),\n         indigena_prop_rank = min_rank(desc(indigena_prop)),\n         total_rank = min_rank(desc(total))) |&gt;\n\n  arrange(desc(total))\n\nA partir das tabelas criadas, diferentes estratégias de análise podem ser adotadas."
  },
  {
    "objectID": "blog/04-post/Raca_cor_sp.html#analisando-os-dados-da-identificação-à-caracterização-da-região-de-interesse",
    "href": "blog/04-post/Raca_cor_sp.html#analisando-os-dados-da-identificação-à-caracterização-da-região-de-interesse",
    "title": "Raça ou cor em São Paulo - uma leitura a partir dos microdados censitários",
    "section": "",
    "text": "Conhecida a distribuição da questão racial para o município de São Paulo, como um todo, bem como entre regiões, o próximo passo consiste em observar a distribuição da questão racial em nossa área de interesse (região da Liberdade). O primeiro passo consiste em identificar quais são as áres de ponderação que abrangem a região. Recorrendo a um mapa interativo para essa finalidade, o objetivo será identificar, a partir da navegação espacial, quais são os códigos das áreas de ponderação qu recobrem a área de interesse.\n\n# Download the São Paulo weighting area limits    \n1ap_mun_sp &lt;- read_weighting_area(code_weighting = 3550308, year = 2010)\n\n\n1\n\nBaixe os limites das áreas de ponderação, definindo o município e o ano;\n\n\n\n\nUsing year/date 2010\n\n\n\n# Download the São Paulo district limits    \n2distrito_mun_sp &lt;- read_neighborhood(year = 2010) |&gt;\n  filter(code_muni == 3550308) |&gt; \n  select(abbrev_state, name_muni, code_district, name_district)\n\n\n2\n\nBaixe os limites dos distritos, definindo o município, o ano e as variáveis de interesse, e,\n\n\n\n\nUsing year/date 2010\n\n\n\n# Plot the weighting areas and district limits\n3mapview(ap_mun_sp, zcol = \"code_weighting\", legend = FALSE) + mapview(distrito_mun_sp, zcol = \"name_district\", alpha.regions = 0.2, legend = FALSE)\n\n\n3\n\nPlote os limites de ambos os dados.\n\n\n\n\n\n\n\n\nComo pode ser visto, o recurso gerado possibilita não só a navegação digital pelo território - com o deslocamento pelas áreas da cidade e o uso do zoom -, mas também permite escolher a imagem de fundo e as camadas geoespaciais (áreas de ponderação e/ou distritos) a serem visualizadas. Para isso, basta clicar no botão com o desenho de retângulos empilhados no lado esquerdo superior da janela e realizar as escolhas. Note: os vazios e/ou a superposição entre polígonos da mesma camada são resultado apenas da opção para deixar a visualização mais leve. No dado original, contudo, eles não existem (em linguagem mais técnica, não há problemas de topologia).\nA partir da interação com o mapa digital, verifica-se que três são as áreas de ponderação (AP) de interesse, com duas pertencendo ao distrito da Liberdade (3550308005007 e 3550308005008) e a outra ao distrito da Sé (3550308005001)."
  },
  {
    "objectID": "blog/04-post/Raca_cor_sp.html#footnotes",
    "href": "blog/04-post/Raca_cor_sp.html#footnotes",
    "title": "Raça ou cor em São Paulo - uma leitura a partir dos microdados censitários",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nAinda que alguns dos principais elementos associados à exploração e análise introdutória de dados sejam abordados, não se pretende esgotar todos os elementos que venham a ser revelados. Longe de uma análise extensiva, o que se busca é construir uma lógica/estrutura para a exploração do fenômeno e/ou processo de interesse.↩︎\nAinda que sejam mais usalmente utilizados, alguns dados censitários também são disponibilizados em outros formatos, como as grades estatísticas(https://mapasinterativos.ibge.gov.br/grade2022/default.html).↩︎\nPara identificar quais são, efetivamente, os dados disponibilizados para cada um dos censos, visite: https://ipeagit.github.io/censobr/articles/censobr.html.↩︎\nA discussão sobre visualização de dados e Storytelling com dados é vasta e não será aqui abordada de forma mais profunda. Uma referência bastante conhecida nesse campo é o livro de Cole N. Knaflic, Storytelling com dados.↩︎\nA mediana, diferentemente da média, é muito menos influenciada pela existência de valores discrepantes (outliers), motivo pelo qual é considerada uma medida de tendência central (ou, de forma mais ampla, medida de localização) robusta.↩︎\no IQR é uma medida de dispersão robusta que computa a diferença entre os valores do primeiro e terceiro quartis dos dados.↩︎\nObservando-se a tabela com os dados brutos, nota-se que 110, das 310 áreas de ponderação do município de São Paulo, não possuem indígenas residentes.↩︎"
  },
  {
    "objectID": "projects/index.html",
    "href": "projects/index.html",
    "title": "Projects",
    "section": "",
    "text": "Previsão do valor da moradia com Machine Learning\n\n\n\nPython\n\n\nMachine Learning\n\n\nData Cleaning\n\n\n\nEste projeto envolve o uso de algoritmos de aprendizado de máquina para prever preços de imóveis com base em diversos fatores, como localização, tamanho e comodidades. Inclui limpeza de dados, engenharia de recursos e seleção de modelos.\n\n\n\nMar 1, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSegmentação de clientes usando técnicas de clusterização\n\n\n\nR\n\n\nMachine Learning\n\n\nClustering\n\n\nStatistical Modelling\n\n\n\nEste projeto se concentra na segmentação de clientes em diferentes grupos com base em seu comportamento de compra e dados demográficos. Ele utiliza algoritmos de agrupamento como K-means e agrupamento hierárquico para identificar segmentos…\n\n\n\nFeb 1, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVisualizando as emissõeS globais de CO2\n\n\n\nR\n\n\nData Visualization\n\n\nEnvironmental Science\n\n\n\nEste projeto envolve a criação de visualizações para mostrar tendências nas emissões globais de CO2 ao longo do tempo. Inclui extração de dados de bancos de dados públicos, limpeza de dados e uso de bibliotecas de visualização para criar…\n\n\n\nJan 1, 2025\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "inct_estrutura.html",
    "href": "inct_estrutura.html",
    "title": "Questão central",
    "section": "",
    "text": "Questão central\nA partir das pesquisas e análises elaboradas desde 1979, data da edição do livro clássico “A Produção Capitalista da Casa (e da cidade) no Brasil Industrial”, organizado por Ermínia Maricato e com prefácio de Francisco de Oliveira, bem como do diagnóstico de um impasse da política urbana no país, é fundamental articular as análises e as avaliações dos diversos programas e políticas executadas desde então. Tal esforço busca superar soluções de política urbana e habitacional que, forjadas a partir de um diagnóstico calcado em um Brasil industrial, já não produzem os efeitos desejados em um contexto de atual desindustrialização, reprimarização da pauta exportadora e dominância financeira.\nO papel do planejamento centralizado e o milagre brasileiro da década de 70 transformaram definitivamente as cidades brasileiras, aprofundando processos já iniciados de metropolização, com intenso crescimento da população urbana por meio de migração e ampliação das periferias urbanas. Em termos analíticos, o conceito de espoliação urbana cunhado por Lúcio Kowarick já demonstra a importância teórica que o momento teve para a compreensão das profundas mudanças pelas quais passava o território brasileiro tanto o urbano quanto o rural.\nO padrão de acumulação que se apresentava ao país à época foi atingido pela alta do preço do petróleo e do choque dos juros estadunidenses. No processo político, a abertura programada pelo Presidente Geisel baseou-se na manutenção do pacto das elites, ensejando uma transição sem rupturas. Tal processo de distensão conviveria, porém, com um aumento crescente das reivindicações populares, seja pela redemocratização do país, seja por políticas públicas de caráter social. Assim, ainda que o crescimento do movimento popular de reivindicação não tenha impedido a transição imaginada pelos donos do poder, pode-se entender que ela marcou fortemente a Nova República e a intervenção do Estado nas políticas sociais.\nA natureza efetiva dessa transição negociada pode ser observada em retrospecto na Nova República, fazendo hoje muito mais sentido em face de como foram encaminhadas as questões sociais e as políticas e programas formulados para mitigá-las. Em muitos relatórios, planos de governo e grupos de estudo a questão da descentralização administrativa aparecia como verdadeira panaceia para as questões sociais prementes na época. A forte centralização do sistema anterior conseguiu ser sinônimo de um modo de governar anacrônico e incapaz de atender as necessidades do Brasil. Certamente, adotar a questão da descentralização administrativa como cerne dos males trouxe confusão entre os conceitos de participação direta, democratização e descentralização.\nÉ deste momento o movimento da Reforma Urbana tão estudado e que encontra seu impasse nas políticas e programas atuais, segundo a literatura. Ainda é possível focalizar programas e políticas urbanas nos instrumentos urbanísticos e em especial no plano diretor estratégico? O que as pesquisas de estudo de caso, em perspectiva comparada, conduzidas em municípios de diferentes características mostram sobre a implementação desses instrumentos?\nA expansão horizontal da RMSP, retratada no livro de 1979, é a marca da espoliação urbana necessária para a urbanização de baixos salários. No entanto, apesar de ser apontada como um processo geral do país, não são todas as capitais que se urbanizam dessa forma nesse momento. Afinal, é justamente a característica de polarização e centralização do milagre econômico que a industrialização de baixos salários pode se desenvolver.\nOs municípios do que hoje conhecemos como as novas frentes de expansão agrícola, em um Brasil reprimarizado, ali, no momento das pesquisas que resultaram no livro, estavam perdendo população ou mantinham-se na matriz produtiva de agricultura e pecuária de baixa intensidade.\nA gramática analítica dos anos 1970 assentava as reflexões sobre a produção do espaço na centralidade do trabalho e na relação Estado/capital e suas tentativas de criar um ajuste espacial funcional ao processo de acumulação. Decorria do diagnóstico uma agenda social-democrata de mudança do estatuto do trabalho na sociedade e na redemocratização do Estado com aumento da permeabilidade das políticas às reivindicações dos trabalhadores organizados (em sindicatos e movimentos sociais). Assim, se essa gramática foi potente como inaugural de um campo de estudos, é importante compreender o esgotamento do modelo e, mais do que isso, sua insuficiência para a análise dos problemas contemporâneos.\nImportante reconhecer a importância da agenda positiva como instrumento de organização e conquistas significativas e incrementais, mas é igualmente importante identificar a insuficiência da política urbana instrumental como política pública na promoção de um espaço urbano reformado e dentro do contexto pós-industrial e de reconfiguração de uma economia de enclave.\nComo se dá na contemporaneidade a urbanização nessas novas frentes de expansão agrícola? Quais as conexões com as metrópoles nacionais em um contexto de capitalismo financeirizado no qual o país se insere? Conhecer e analisar as características dessa urbanização com base em evidências empíricas e ciência de dados é um dos principais objetivos do INCT.\nApós 35 anos da Constituição Federal, pouco mais de 20 de Estatuto da Cidade, e a configuração de uma economia menos industrial, mais agrária e de serviços, cabe um momento de balanço de pesquisas realizadas, de avaliação de resultados e impactos e sistematização e de elaboração de investigações prospectivas.\n\n\nEstrutura do INCT:\nO INCT Produção da Casa e da Cidade se desdobra em um conjunto de eixos de investigação e linhas de pesquisa, articulados entre si. Os primeiros três eixos abordam as formas de produção da casa e da cidade: a autoconstrução e a produção doméstica, as iniciativas estatais e a produção imobiliária privada. O quarto eixo procura aprofundar o campo dos estudos urbanos a partir dessa perspectiva. Esses quatro eixos de investigação, por sua vez, se articulam em onze linhas de pesquisa:\n\n\n\nEixos e linhas de pesquisa"
  },
  {
    "objectID": "blog/second-post/index.html",
    "href": "blog/second-post/index.html",
    "title": "Second Post",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Quis imperdiet massa tincidunt nunc pulvinar sapien et ligula. Amet cursus sit amet dictum sit amet. Eget duis at tellus at urna condimentum. Convallis aenean et tortor at risus viverra. Tincidunt ornare massa eget egestas purus viverra accumsan. Et malesuada fames ac turpis egestas. At imperdiet dui accumsan sit amet. Ut ornare lectus sit amet est placerat. Enim nulla aliquet porttitor lacus luctus accumsan tortor posuere. Duis ultricies lacus sed turpis tincidunt id aliquet risus. Mattis enim ut tellus elementum sagittis. Dui id ornare arcu odio ut. Natoque penatibus et magnis dis. Libero justo laoreet sit amet cursus sit. Sed faucibus turpis in eu. Tempus iaculis urna id volutpat lacus laoreet.\nPhasellus vestibulum lorem sed risus. Eget felis eget nunc lobortis mattis. Sit amet aliquam id diam maecenas ultricies. Egestas maecenas pharetra convallis posuere morbi. Etiam erat velit scelerisque in dictum non consectetur a erat. Cras fermentum odio eu feugiat pretium nibh ipsum consequat. Viverra accumsan in nisl nisi scelerisque. Et netus et malesuada fames ac. Amet tellus cras adipiscing enim eu turpis egestas pretium aenean. Eget lorem dolor sed viverra ipsum nunc aliquet. Ultrices dui sapien eget mi proin sed libero enim sed. Ultricies mi eget mauris pharetra et ultrices neque. Ipsum suspendisse ultrices gravida dictum. A arcu cursus vitae congue mauris rhoncus aenean vel. Gravida arcu ac tortor dignissim convallis. Nulla posuere sollicitudin aliquam ultrices."
  },
  {
    "objectID": "blog/04-post/Raca_cor_sp_orig.html",
    "href": "blog/04-post/Raca_cor_sp_orig.html",
    "title": "Intro",
    "section": "",
    "text": "The present document was created to understand the race/color distribution in different scale levels over time. In order to get this, the Brazilian demographic census’ data (IBGE) will be used.\nFirst, let’s install and load the packages needed.\n\n# Load the packages (if some package must be installed, use the install.packages(\"package_name\") function)\npckg &lt;- c(\"tidyverse\", \"sf\", \"here\", \"arrow\", \"censobr\", \"geobr\", \"sidrar\", \"gt\", \"devtools\", \"mapview\")\n# install.packages(pckg)\n\nlapply(pckg, library, character.only = TRUE)\n\n[[1]]\n [1] \"lubridate\" \"forcats\"   \"stringr\"   \"dplyr\"     \"purrr\"     \"readr\"    \n [7] \"tidyr\"     \"tibble\"    \"ggplot2\"   \"tidyverse\" \"stats\"     \"graphics\" \n[13] \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[2]]\n [1] \"sf\"        \"lubridate\" \"forcats\"   \"stringr\"   \"dplyr\"     \"purrr\"    \n [7] \"readr\"     \"tidyr\"     \"tibble\"    \"ggplot2\"   \"tidyverse\" \"stats\"    \n[13] \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[3]]\n [1] \"here\"      \"sf\"        \"lubridate\" \"forcats\"   \"stringr\"   \"dplyr\"    \n [7] \"purrr\"     \"readr\"     \"tidyr\"     \"tibble\"    \"ggplot2\"   \"tidyverse\"\n[13] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"  \n[19] \"base\"     \n\n[[4]]\n [1] \"arrow\"     \"here\"      \"sf\"        \"lubridate\" \"forcats\"   \"stringr\"  \n [7] \"dplyr\"     \"purrr\"     \"readr\"     \"tidyr\"     \"tibble\"    \"ggplot2\"  \n[13] \"tidyverse\" \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[19] \"methods\"   \"base\"     \n\n[[5]]\n [1] \"censobr\"   \"arrow\"     \"here\"      \"sf\"        \"lubridate\" \"forcats\"  \n [7] \"stringr\"   \"dplyr\"     \"purrr\"     \"readr\"     \"tidyr\"     \"tibble\"   \n[13] \"ggplot2\"   \"tidyverse\" \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[19] \"datasets\"  \"methods\"   \"base\"     \n\n[[6]]\n [1] \"geobr\"     \"censobr\"   \"arrow\"     \"here\"      \"sf\"        \"lubridate\"\n [7] \"forcats\"   \"stringr\"   \"dplyr\"     \"purrr\"     \"readr\"     \"tidyr\"    \n[13] \"tibble\"    \"ggplot2\"   \"tidyverse\" \"stats\"     \"graphics\"  \"grDevices\"\n[19] \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[7]]\n [1] \"sidrar\"    \"geobr\"     \"censobr\"   \"arrow\"     \"here\"      \"sf\"       \n [7] \"lubridate\" \"forcats\"   \"stringr\"   \"dplyr\"     \"purrr\"     \"readr\"    \n[13] \"tidyr\"     \"tibble\"    \"ggplot2\"   \"tidyverse\" \"stats\"     \"graphics\" \n[19] \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[8]]\n [1] \"gt\"        \"sidrar\"    \"geobr\"     \"censobr\"   \"arrow\"     \"here\"     \n [7] \"sf\"        \"lubridate\" \"forcats\"   \"stringr\"   \"dplyr\"     \"purrr\"    \n[13] \"readr\"     \"tidyr\"     \"tibble\"    \"ggplot2\"   \"tidyverse\" \"stats\"    \n[19] \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"     \n\n[[9]]\n [1] \"devtools\"  \"usethis\"   \"gt\"        \"sidrar\"    \"geobr\"     \"censobr\"  \n [7] \"arrow\"     \"here\"      \"sf\"        \"lubridate\" \"forcats\"   \"stringr\"  \n[13] \"dplyr\"     \"purrr\"     \"readr\"     \"tidyr\"     \"tibble\"    \"ggplot2\"  \n[19] \"tidyverse\" \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n[25] \"methods\"   \"base\"     \n\n[[10]]\n [1] \"mapview\"   \"devtools\"  \"usethis\"   \"gt\"        \"sidrar\"    \"geobr\"    \n [7] \"censobr\"   \"arrow\"     \"here\"      \"sf\"        \"lubridate\" \"forcats\"  \n[13] \"stringr\"   \"dplyr\"     \"purrr\"     \"readr\"     \"tidyr\"     \"tibble\"   \n[19] \"ggplot2\"   \"tidyverse\" \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[25] \"datasets\"  \"methods\"   \"base\"     \n\n\n\n\nFirst, let’s create some variables to make the code more easily reproducible.\n\n# Let's create a list of variables to reuse the code\n## Select the municipality(ies)' name(s)\nmun_name = \"São Paulo\"\n\n\n## Select the census demographic year\ncensus_year = 2010 # Possibilities: 1960, 1970, 1980, 1991, 2000, 2010. See: https://ipeagit.github.io/censobr/articles/censobr.html\n\n\n## See the dictionary of variables\n### Select the dataset of interest\ndataset_sel = \"population\" # Possibilities: \"population\", \"households\", \"families\", \"mortality\", \"emigration\", \"tracts\". See: ?censobr::data_dictionary, argument dataset\n\n### See the variable dictionary\ncensobr::data_dictionary(year = census_year, dataset = dataset_sel)\n\nReading data cached locally.\n\n\nNULL\n\n\nChoose the variables of interest from Brazilian demographic census.\n\n## Choose the population variables of interest\nvar_cens_pop &lt;- c(\"V0001\", \"V0002\", \"V0011\", \"V0300\", \"V0010\", \"V0606\", \"V0601\", \"V0618\", \"V0620\", \"V0624\", \"V6254\", \"V6264\", \"V6529\", \"V6531\")\n\n\n## Choose the households variables of interest\n# var_cens_dom &lt;- c(\"V0001\", \"V0002\", \"V0011\", \"V0300\", \"V0010\", \"V0401\", \"V4002\", \"V6203\")\n\n\n## POPULATION DATASET (POP DATA)\n# V0001     UNIDADE DA FEDERAÇÃO\n# V0002     CÓDIGO DO MUNICÍPIO\n# V0011     ÁREA DE PONDERAÇÃO\n# V0300     CONTROLE\n# V0010     PESO AMOSTRAL\n# V0606   RAÇA E COR\n# V0618     NASCEU NESTE MUNICÍPIO\n# V0620     NACIONALIDADE\n# V0624     TEMPO DE MORADIA NO MUNICÍPIO\n# V0626   RESIDÊNCIA EM 31 DE JULHO DE 2005\n# V6254     MUNICÍPIO DE RESIDÊNCIA ANTERIOR\n# V6264     MUNICÍPIO DE RESIDÊNCIA EM 31 DE JULHO DE 2005\n# V5020   NÚMERO DA FAMÍLIA\n# V5060   NÚMERO DE PESSOAS NA FAMÍLIA\n# V5070   RENDIMENTO FAMILIAR PER CAPITA EM JULHO DE 2010\n# V6511   VALOR DO RENDIMENTO BRUTO (OU A RETIRADA) MENSAL NO TRABALHO PRINCIPAL: (pode ter valor branco)\n# V6521   VALOR DO RENDIMENTO BRUTO (OU A RETIRADA) MENSAL NOS DEMAIS TRABALHOS (EM REAIS)\n# V6529   RENDIMENTO DOMICILIAR (DOMICÍLIO PARTICULAR) EM JULHO DE 2010\n# V6531   RENDIMENTO DOMICILIAR PER CAPITA (DOMICÍLIO PARTICULAR) EM JULHO DE 2010\n\n## HOUSEHOLD DATASET (HH DATA)\n# V0401   QUANTAS PESSOAS MORAVAM NESTE DOMICÍLIO EM 31 DE JULHO DE 2010\n# V4001     ESPÉCIE DE UNIDADE VISITADA\n# V4002     TIPO DE ESPÉCIE\n# V6203     DENSIDADE DE MORADOR / CÔMODO  \n# V6204     DENSIDADE DE MORADOR / DORMITÓRIO\n\nOnce the variables are chosen, let’s load the data for both population and households.\n\n## Download and Select the variables of interest from POP DATA, including RACE\nmicro_pop_orig &lt;- censobr::read_population(year = census_year, columns = var_cens_pop, add_labels = \"pt\") # if the downloading was stopped before finishing, use \"censobr::censobr_cache(delete_file = \"2000_population_v0.3.0.parquet\")\" to exclude it from your computer before running the code again\n\nReading data cached locally.\n\n\nWarning: Potentially unsafe or invalid elements have been discarded from R metadata.\nℹ Type: \"externalptr\"\n→ If you trust the source, you can set `options(arrow.unsafe_metadata = TRUE)` to preserve them.\n\n# ## Select the variables of interest from HH dataset, including RACE\n# micro_dom_orig &lt;- censobr::read_households(year = census_year, columns = var_cens_dom, add_labels = \"pt\")\n\n\n## Compute the total population for the municipality, weighting area (AP) and household by race\n### Select the municipality of interest and load the pop data\nmicro_pop &lt;- micro_pop_orig |&gt;\n  filter(V0001 == \"35\" & V0002 == \"50308\") |&gt;\n  collect() |&gt;\n  mutate(V0624 = as.numeric(V0624)) |&gt;\n  janitor::clean_names()\n\nWarning: Potentially unsafe or invalid elements have been discarded from R metadata.\nℹ Type: \"externalptr\"\n→ If you trust the source, you can set `options(arrow.unsafe_metadata = TRUE)` to preserve them.\nPotentially unsafe or invalid elements have been discarded from R metadata.\nℹ Type: \"externalptr\"\n→ If you trust the source, you can set `options(arrow.unsafe_metadata = TRUE)` to preserve them.\n\nglimpse(micro_pop)\n\nRows: 552,037\nColumns: 14\n$ v0001 &lt;chr&gt; \"35\", \"35\", \"35\", \"35\", \"35\", \"35\", \"35\", \"35\", \"35\", \"35\", \"35\"…\n$ v0002 &lt;chr&gt; \"50308\", \"50308\", \"50308\", \"50308\", \"50308\", \"50308\", \"50308\", \"…\n$ v0011 &lt;chr&gt; \"3550308005001\", \"3550308005001\", \"3550308005001\", \"355030800500…\n$ v0300 &lt;dbl&gt; 6965, 6965, 6965, 6965, 7117, 7117, 7117, 7117, 48707, 48707, 48…\n$ v0010 &lt;dbl&gt; 12.9312, 12.9312, 12.9312, 12.9312, 10.5984, 10.5984, 10.5984, 1…\n$ v0606 &lt;chr&gt; \"Branca\", \"Parda\", \"Parda\", \"Parda\", \"Branca\", \"Branca\", \"Branca…\n$ v0601 &lt;chr&gt; \"Feminino\", \"Masculino\", \"Feminino\", \"Masculino\", \"Feminino\", \"M…\n$ v0618 &lt;chr&gt; \"Sim, e sempre morou\", \"Sim, e sempre morou\", \"Sim, e sempre mor…\n$ v0620 &lt;chr&gt; NA, NA, NA, NA, \"Brasileiro nato\", NA, NA, NA, \"Brasileiro nato\"…\n$ v0624 &lt;dbl&gt; NA, NA, NA, NA, 10, NA, NA, NA, 18, 15, NA, 13, NA, NA, 16, 16, …\n$ v6254 &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ v6264 &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ v6529 &lt;dbl&gt; 1710, 1710, 1710, 1710, 400, 400, 400, 400, 3000, 3000, 3000, 70…\n$ v6531 &lt;dbl&gt; 427.5, 427.5, 427.5, 427.5, 100.0, 100.0, 100.0, 100.0, 1000.0, …\n\n# ### Select the municipality of interest and load the house data\n# micro_dom &lt;- micro_dom_orig |&gt;\n#   filter(V0001 == \"35\" & V0002 == \"50308\") |&gt;\n#   collect() |&gt;\n#   janitor::clean_names()\n#\n# glimpse(micro_dom)\n\n\n### Compute the RACE distribution by MUN\nrace_by_mun_2010 &lt;- micro_pop |&gt;\n  mutate(v0606 = factor(v0606),\n         v0618 = factor(v0618)\n         # Create a new var if labeled categories are not used (add_labels = \"pt\" arument in the \"read_x\" censobr function),\n         # raca_nom = factor(case_when(v0606 == 1 ~ \"branca\",\n         #                      v0606 == 2 ~ \"preta\",\n         #                      v0606 == 3 ~ \"amarela\",\n         #                      v0606 == 4 ~ \"parda\",\n         #                      v0606 == 5 ~ \"indígena\",\n         #                      v0606 == 9 ~ \"ignorado\"))\n        ) |&gt;\n  group_by(v0606) |&gt;\n  summarise(tot_peop_weig = sum(v0010), tot_peop = n()) |&gt;\n  rename(raca_cor = v0606) |&gt;\n  mutate(prop_race = tot_peop_weig/sum(tot_peop_weig))\n\n# write_csv2(race_by_mun_2010, file = here(file.path(\"2010\", \"Gerados\", \"Tabelas\", \"raca_mun_sp_2010.csv\")))\n\n### Compute the RACE distribution by AP\nrace_by_ap_2010 &lt;- micro_pop |&gt;\n  mutate(v0606 = factor(v0606),\n         v0618 = factor(v0618),\n         v0011 = factor(v0011)\n         # raca_nom = factor(case_when(v0606 == 1 ~ \"branca\",\n         #                      v0606 == 2 ~ \"preta\",\n         #                      v0606 == 3 ~ \"amarela\",\n         #                      v0606 == 4 ~ \"parda\",\n         #                      v0606 == 5 ~ \"indígena\",\n         #                      v0606 == 9 ~ \"ignorado\"))\n         ) |&gt;\n  group_by(v0011, v0606) |&gt;\n  summarise(tot_peop_weig = sum(v0010), tot_peop = n()) |&gt;\n  rename(ap = v0011, raca_cor = v0606) |&gt;\n  mutate(prop_race = tot_peop_weig/sum(tot_peop_weig))\n\n`summarise()` has grouped output by 'v0011'. You can override using the\n`.groups` argument.\n\n# (WIDER form)\nrace_by_ap_2010_wider &lt;- race_by_ap_2010 |&gt;\n  pivot_wider(id_cols = ap, names_from = raca_cor, names_glue = \"{raca_cor}_{.value}\", values_from = c(tot_peop_weig, prop_race), values_fill = 0) |&gt;\n  set_names(\"ap\", \"amarela\", \"branca\", \"parda\", \"preta\", \"indigena\", \"ignorado\", \"amarela_prop\", \"branca_prop\", 'parda_prop', \"preta_prop\", \"indigena_prop\", \"ignorado_prop\")\n\n# write_csv2(race_by_ap_2010_wider, file = here(file.path(\"2010\", \"Gerados\", \"Tabelas\", \"raca_ap_sp_2010.csv\")))\n\n\n### Compute the RACE distribution by AP (cases selection).\n#### Create a variable for all areas (AP) of interest\nap_sel &lt;- c(3550308005001, 3550308005007, 3550308005008)\n\n#### Select the cases and compute the results by AP\nrace_by_ap_2010_sel &lt;- race_by_ap_2010 |&gt;\n  filter(ap %in% ap_sel) |&gt;\n  mutate(district = case_when(ap == ap_sel[2] | ap == ap_sel[3] ~ \"liberdade\",\n                              ap == ap_sel[1] ~ \"se\"))\n\n#### (WIDER form - cases selected)\nrace_by_ap_2010_sel_wider &lt;- race_by_ap_2010_sel |&gt;\n  pivot_wider(id_cols = ap, names_from = raca_cor, names_glue = \"{raca_cor}_{.value}\", values_from = c(tot_peop_weig, prop_race), values_fill = 0) |&gt;\n  mutate(district =\n           case_when(\n             ap == ap_sel[1] ~ \"se\",\n             ap == ap_sel[2] | ap == ap_sel[3] ~ \"liberdade\")) |&gt;\n  set_names(\"ap\", \"amarela\", \"branca\", \"parda\", \"preta\", \"indigena\", \"amarela_prop\", \"branca_prop\", 'parda_prop', \"preta_prop\", \"indigena_prop\", \"distrito\") |&gt;\n  relocate(distrito)\n\n# write_csv2(race_by_ap_2010_sel_wider, file = here(file.path(\"2010\", \"Gerados\", \"Tabelas\", \"raca_ap_sp_sel_2010.csv\")))\n\n\n### Compute the RACE distribution by HH\nrace_by_dom_2010 &lt;- micro_pop |&gt;\n  mutate(v0606 = factor(v0606),\n         v0618 = factor(v0618),\n         v0300 = factor(v0300)\n         # Create a new var if labeled categories are not used (add_labels = \"pt\" arument in the \"read_x\" censobr function),\n         # raca_nom = factor(case_when(v0606 == 1 ~ \"branca\",\n         #                      v0606 == 2 ~ \"preta\",\n         #                      v0606 == 3 ~ \"amarela\",\n         #                      v0606 == 4 ~ \"parda\",\n         #                      v0606 == 5 ~ \"indígena\",\n         #                      v0606 == 9 ~ \"ignorado\"))\n        ) |&gt;\n  group_by(v0300, v0606) |&gt;\n  summarise(tot_peop_weig = sum(v0010), tot_peop = n()) |&gt;\n  rename(dom_id = v0300, raca_cor = v0606) |&gt;\n  mutate(prop_race_dom = tot_peop_weig/sum(tot_peop_weig))\n\n`summarise()` has grouped output by 'v0300'. You can override using the\n`.groups` argument.\n\n## Create a graphic for the race distribution\n### Parameters to reuse\ntitle_grap =  \"Distribuição de pessoas por cor ou raça\"\nsubtitle_grap =  \"São Paulo, 2010\"\ndata_orig_grap = \"IBGE, Censo 2010\"\nap_sel &lt;- c(3550308005001, 3550308005007, 3550308005008)\n\n### Municipality\nrace_mun_graph &lt;- race_by_mun_2010 |&gt;\n  ggplot(aes(x = fct_reorder(raca_cor, tot_peop_weig, .desc = T), y = tot_peop_weig, fill = raca_cor)) +\n    geom_col(show.legend = F) +\n    geom_text(aes(\n      label = round(tot_peop_weig)),\n      vjust = - 0.5,\n      hjust = 0.5,\n      size = 4,\n      fontface = \"bold\",\n      # colour = \"#3b3938\"\n      ) +\n    geom_text(aes(\n      label = str_c(\"(\", round(prop_race*100, 2), \"%)\")),\n      vjust = 1.25,\n      hjust = 0.5,\n      size = 3.5) +\n    labs(title = title_grap,\n       subtitle = subtitle_grap,\n       caption = data_orig_grap,\n       # x = \"(Cor ou raça)\",\n       # y = \"(Número de pessoas)\"\n       )  +\n  scale_fill_manual(values = c(\"yellow\", \"#f7efeb\", \"lightgrey\", \"#bf812d\", \"#8c510a\", \"#5e3814\")) +\n  scale_y_continuous(breaks = c(0, 2000000, 4000000, 6000000),\n                    labels = c(\"0\", \"2 Mi\", \"4 Mi\", \"6 Mi\")) +\n  # scale_fill_viridis_d(direction = 1) +\n  theme_classic(base_size = 14) +\n  theme(\n    axis.ticks.x = element_blank(),\n    # axis.text.x = element_blank(),\n    axis.ticks.y = element_blank(),\n    # axis.text.y = element_blank(),\n    axis.title = element_blank() # element_text(colour = \"grey\", size = 7.5))  \n    )\n# + coord_flip()\n\n# ggsave(filename = str_c(\"race_mun_sp_\", census_year, \"_grafv.jpeg\"), plot = race_mun_graph1, path = here(file.path(census_year, \"Gerados\", \"Imagens\")), dpi = 300, width = 25, height = 17.5, units = \"cm\")\n\n### WEIGHTING AREAS SELECTED\nrace_ap_graph &lt;- race_by_ap_2010_sel |&gt;\n  # Create a variable to label the facets\n  mutate(ap_label = case_when(\n    ap == ap_sel[1] ~ str_c(ap_sel[1], \" (Sé)\"),\n    ap == ap_sel[2] ~ str_c(ap_sel[2], \" (Liberdade)\"),\n    ap == ap_sel[3] ~ str_c(ap_sel[3], \" (Liberdade)\"))) |&gt;\n  ggplot(aes(x = fct_reorder(raca_cor, tot_peop_weig, .desc = T), y = tot_peop_weig, fill = raca_cor)) +\n    geom_col(show.legend = F) +\n    geom_text(aes(\n      label = round(tot_peop_weig)),\n      vjust = - 0.5,\n      hjust = 0.5,\n      size = 3.75,\n      fontface = \"bold\",\n      # colour = \"#3b3938\"\n      ) +\n    geom_text(aes(\n      label = str_c(\"(\", round(prop_race*100, 2), \"%)\")),\n      vjust = 1.25,\n      hjust = 0.5,\n      size = 3) +\n    labs(title = title_grap,\n       subtitle = subtitle_grap,\n       caption = data_orig_grap,\n       # x = \"(Cor ou raça)\",\n       # y = \"(Número de pessoas)\"\n       )  +\n  scale_fill_manual(values = c(\"yellow\", \"#f7efeb\", \"lightgrey\", \"#bf812d\", \"#8c510a\", \"#5e3814\")) +\n  # scale_fill_viridis_d(direction = 1) +\n  theme_classic(base_size = 14) +\n  theme(\n    # axis.ticks.x = element_blank(),\n    axis.text.x = element_blank(),\n    # axis.ticks.y = element_blank(),\n    # axis.text.y = element_blank(),\n    axis.title = element_blank() # element_text(colour = \"grey\", size = 7.5))  \n    ) +\n  facet_wrap(vars(ap_label)) +\n  coord_flip()\n\n# ggsave(filename = str_c(\"race_mun_sp_ap_\", census_year, \"_grafv.jpeg\"), plot = race_ap_graph, path = here(file.path(census_year, \"Gerados\", \"Imagens\")), dpi = 300, width = 25, height = 17.5, units = \"cm\")\nrace_ap_graph"
  },
  {
    "objectID": "blog/04-post/Raca_cor_sp_orig.html#investigate-municipality-using-geobr-and-censobr",
    "href": "blog/04-post/Raca_cor_sp_orig.html#investigate-municipality-using-geobr-and-censobr",
    "title": "Intro",
    "section": "",
    "text": "First, let’s create some variables to make the code more easily reproducible.\n\n# Let's create a list of variables to reuse the code\n## Select the municipality(ies)' name(s)\nmun_name = \"São Paulo\"\n\n\n## Select the census demographic year\ncensus_year = 2010 # Possibilities: 1960, 1970, 1980, 1991, 2000, 2010. See: https://ipeagit.github.io/censobr/articles/censobr.html\n\n\n## See the dictionary of variables\n### Select the dataset of interest\ndataset_sel = \"population\" # Possibilities: \"population\", \"households\", \"families\", \"mortality\", \"emigration\", \"tracts\". See: ?censobr::data_dictionary, argument dataset\n\n### See the variable dictionary\ncensobr::data_dictionary(year = census_year, dataset = dataset_sel)\n\nReading data cached locally.\n\n\nNULL\n\n\nChoose the variables of interest from Brazilian demographic census.\n\n## Choose the population variables of interest\nvar_cens_pop &lt;- c(\"V0001\", \"V0002\", \"V0011\", \"V0300\", \"V0010\", \"V0606\", \"V0601\", \"V0618\", \"V0620\", \"V0624\", \"V6254\", \"V6264\", \"V6529\", \"V6531\")\n\n\n## Choose the households variables of interest\n# var_cens_dom &lt;- c(\"V0001\", \"V0002\", \"V0011\", \"V0300\", \"V0010\", \"V0401\", \"V4002\", \"V6203\")\n\n\n## POPULATION DATASET (POP DATA)\n# V0001     UNIDADE DA FEDERAÇÃO\n# V0002     CÓDIGO DO MUNICÍPIO\n# V0011     ÁREA DE PONDERAÇÃO\n# V0300     CONTROLE\n# V0010     PESO AMOSTRAL\n# V0606   RAÇA E COR\n# V0618     NASCEU NESTE MUNICÍPIO\n# V0620     NACIONALIDADE\n# V0624     TEMPO DE MORADIA NO MUNICÍPIO\n# V0626   RESIDÊNCIA EM 31 DE JULHO DE 2005\n# V6254     MUNICÍPIO DE RESIDÊNCIA ANTERIOR\n# V6264     MUNICÍPIO DE RESIDÊNCIA EM 31 DE JULHO DE 2005\n# V5020   NÚMERO DA FAMÍLIA\n# V5060   NÚMERO DE PESSOAS NA FAMÍLIA\n# V5070   RENDIMENTO FAMILIAR PER CAPITA EM JULHO DE 2010\n# V6511   VALOR DO RENDIMENTO BRUTO (OU A RETIRADA) MENSAL NO TRABALHO PRINCIPAL: (pode ter valor branco)\n# V6521   VALOR DO RENDIMENTO BRUTO (OU A RETIRADA) MENSAL NOS DEMAIS TRABALHOS (EM REAIS)\n# V6529   RENDIMENTO DOMICILIAR (DOMICÍLIO PARTICULAR) EM JULHO DE 2010\n# V6531   RENDIMENTO DOMICILIAR PER CAPITA (DOMICÍLIO PARTICULAR) EM JULHO DE 2010\n\n## HOUSEHOLD DATASET (HH DATA)\n# V0401   QUANTAS PESSOAS MORAVAM NESTE DOMICÍLIO EM 31 DE JULHO DE 2010\n# V4001     ESPÉCIE DE UNIDADE VISITADA\n# V4002     TIPO DE ESPÉCIE\n# V6203     DENSIDADE DE MORADOR / CÔMODO  \n# V6204     DENSIDADE DE MORADOR / DORMITÓRIO\n\nOnce the variables are chosen, let’s load the data for both population and households.\n\n## Download and Select the variables of interest from POP DATA, including RACE\nmicro_pop_orig &lt;- censobr::read_population(year = census_year, columns = var_cens_pop, add_labels = \"pt\") # if the downloading was stopped before finishing, use \"censobr::censobr_cache(delete_file = \"2000_population_v0.3.0.parquet\")\" to exclude it from your computer before running the code again\n\nReading data cached locally.\n\n\nWarning: Potentially unsafe or invalid elements have been discarded from R metadata.\nℹ Type: \"externalptr\"\n→ If you trust the source, you can set `options(arrow.unsafe_metadata = TRUE)` to preserve them.\n\n# ## Select the variables of interest from HH dataset, including RACE\n# micro_dom_orig &lt;- censobr::read_households(year = census_year, columns = var_cens_dom, add_labels = \"pt\")\n\n\n## Compute the total population for the municipality, weighting area (AP) and household by race\n### Select the municipality of interest and load the pop data\nmicro_pop &lt;- micro_pop_orig |&gt;\n  filter(V0001 == \"35\" & V0002 == \"50308\") |&gt;\n  collect() |&gt;\n  mutate(V0624 = as.numeric(V0624)) |&gt;\n  janitor::clean_names()\n\nWarning: Potentially unsafe or invalid elements have been discarded from R metadata.\nℹ Type: \"externalptr\"\n→ If you trust the source, you can set `options(arrow.unsafe_metadata = TRUE)` to preserve them.\nPotentially unsafe or invalid elements have been discarded from R metadata.\nℹ Type: \"externalptr\"\n→ If you trust the source, you can set `options(arrow.unsafe_metadata = TRUE)` to preserve them.\n\nglimpse(micro_pop)\n\nRows: 552,037\nColumns: 14\n$ v0001 &lt;chr&gt; \"35\", \"35\", \"35\", \"35\", \"35\", \"35\", \"35\", \"35\", \"35\", \"35\", \"35\"…\n$ v0002 &lt;chr&gt; \"50308\", \"50308\", \"50308\", \"50308\", \"50308\", \"50308\", \"50308\", \"…\n$ v0011 &lt;chr&gt; \"3550308005001\", \"3550308005001\", \"3550308005001\", \"355030800500…\n$ v0300 &lt;dbl&gt; 6965, 6965, 6965, 6965, 7117, 7117, 7117, 7117, 48707, 48707, 48…\n$ v0010 &lt;dbl&gt; 12.9312, 12.9312, 12.9312, 12.9312, 10.5984, 10.5984, 10.5984, 1…\n$ v0606 &lt;chr&gt; \"Branca\", \"Parda\", \"Parda\", \"Parda\", \"Branca\", \"Branca\", \"Branca…\n$ v0601 &lt;chr&gt; \"Feminino\", \"Masculino\", \"Feminino\", \"Masculino\", \"Feminino\", \"M…\n$ v0618 &lt;chr&gt; \"Sim, e sempre morou\", \"Sim, e sempre morou\", \"Sim, e sempre mor…\n$ v0620 &lt;chr&gt; NA, NA, NA, NA, \"Brasileiro nato\", NA, NA, NA, \"Brasileiro nato\"…\n$ v0624 &lt;dbl&gt; NA, NA, NA, NA, 10, NA, NA, NA, 18, 15, NA, 13, NA, NA, 16, 16, …\n$ v6254 &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ v6264 &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ v6529 &lt;dbl&gt; 1710, 1710, 1710, 1710, 400, 400, 400, 400, 3000, 3000, 3000, 70…\n$ v6531 &lt;dbl&gt; 427.5, 427.5, 427.5, 427.5, 100.0, 100.0, 100.0, 100.0, 1000.0, …\n\n# ### Select the municipality of interest and load the house data\n# micro_dom &lt;- micro_dom_orig |&gt;\n#   filter(V0001 == \"35\" & V0002 == \"50308\") |&gt;\n#   collect() |&gt;\n#   janitor::clean_names()\n#\n# glimpse(micro_dom)\n\n\n### Compute the RACE distribution by MUN\nrace_by_mun_2010 &lt;- micro_pop |&gt;\n  mutate(v0606 = factor(v0606),\n         v0618 = factor(v0618)\n         # Create a new var if labeled categories are not used (add_labels = \"pt\" arument in the \"read_x\" censobr function),\n         # raca_nom = factor(case_when(v0606 == 1 ~ \"branca\",\n         #                      v0606 == 2 ~ \"preta\",\n         #                      v0606 == 3 ~ \"amarela\",\n         #                      v0606 == 4 ~ \"parda\",\n         #                      v0606 == 5 ~ \"indígena\",\n         #                      v0606 == 9 ~ \"ignorado\"))\n        ) |&gt;\n  group_by(v0606) |&gt;\n  summarise(tot_peop_weig = sum(v0010), tot_peop = n()) |&gt;\n  rename(raca_cor = v0606) |&gt;\n  mutate(prop_race = tot_peop_weig/sum(tot_peop_weig))\n\n# write_csv2(race_by_mun_2010, file = here(file.path(\"2010\", \"Gerados\", \"Tabelas\", \"raca_mun_sp_2010.csv\")))\n\n### Compute the RACE distribution by AP\nrace_by_ap_2010 &lt;- micro_pop |&gt;\n  mutate(v0606 = factor(v0606),\n         v0618 = factor(v0618),\n         v0011 = factor(v0011)\n         # raca_nom = factor(case_when(v0606 == 1 ~ \"branca\",\n         #                      v0606 == 2 ~ \"preta\",\n         #                      v0606 == 3 ~ \"amarela\",\n         #                      v0606 == 4 ~ \"parda\",\n         #                      v0606 == 5 ~ \"indígena\",\n         #                      v0606 == 9 ~ \"ignorado\"))\n         ) |&gt;\n  group_by(v0011, v0606) |&gt;\n  summarise(tot_peop_weig = sum(v0010), tot_peop = n()) |&gt;\n  rename(ap = v0011, raca_cor = v0606) |&gt;\n  mutate(prop_race = tot_peop_weig/sum(tot_peop_weig))\n\n`summarise()` has grouped output by 'v0011'. You can override using the\n`.groups` argument.\n\n# (WIDER form)\nrace_by_ap_2010_wider &lt;- race_by_ap_2010 |&gt;\n  pivot_wider(id_cols = ap, names_from = raca_cor, names_glue = \"{raca_cor}_{.value}\", values_from = c(tot_peop_weig, prop_race), values_fill = 0) |&gt;\n  set_names(\"ap\", \"amarela\", \"branca\", \"parda\", \"preta\", \"indigena\", \"ignorado\", \"amarela_prop\", \"branca_prop\", 'parda_prop', \"preta_prop\", \"indigena_prop\", \"ignorado_prop\")\n\n# write_csv2(race_by_ap_2010_wider, file = here(file.path(\"2010\", \"Gerados\", \"Tabelas\", \"raca_ap_sp_2010.csv\")))\n\n\n### Compute the RACE distribution by AP (cases selection).\n#### Create a variable for all areas (AP) of interest\nap_sel &lt;- c(3550308005001, 3550308005007, 3550308005008)\n\n#### Select the cases and compute the results by AP\nrace_by_ap_2010_sel &lt;- race_by_ap_2010 |&gt;\n  filter(ap %in% ap_sel) |&gt;\n  mutate(district = case_when(ap == ap_sel[2] | ap == ap_sel[3] ~ \"liberdade\",\n                              ap == ap_sel[1] ~ \"se\"))\n\n#### (WIDER form - cases selected)\nrace_by_ap_2010_sel_wider &lt;- race_by_ap_2010_sel |&gt;\n  pivot_wider(id_cols = ap, names_from = raca_cor, names_glue = \"{raca_cor}_{.value}\", values_from = c(tot_peop_weig, prop_race), values_fill = 0) |&gt;\n  mutate(district =\n           case_when(\n             ap == ap_sel[1] ~ \"se\",\n             ap == ap_sel[2] | ap == ap_sel[3] ~ \"liberdade\")) |&gt;\n  set_names(\"ap\", \"amarela\", \"branca\", \"parda\", \"preta\", \"indigena\", \"amarela_prop\", \"branca_prop\", 'parda_prop', \"preta_prop\", \"indigena_prop\", \"distrito\") |&gt;\n  relocate(distrito)\n\n# write_csv2(race_by_ap_2010_sel_wider, file = here(file.path(\"2010\", \"Gerados\", \"Tabelas\", \"raca_ap_sp_sel_2010.csv\")))\n\n\n### Compute the RACE distribution by HH\nrace_by_dom_2010 &lt;- micro_pop |&gt;\n  mutate(v0606 = factor(v0606),\n         v0618 = factor(v0618),\n         v0300 = factor(v0300)\n         # Create a new var if labeled categories are not used (add_labels = \"pt\" arument in the \"read_x\" censobr function),\n         # raca_nom = factor(case_when(v0606 == 1 ~ \"branca\",\n         #                      v0606 == 2 ~ \"preta\",\n         #                      v0606 == 3 ~ \"amarela\",\n         #                      v0606 == 4 ~ \"parda\",\n         #                      v0606 == 5 ~ \"indígena\",\n         #                      v0606 == 9 ~ \"ignorado\"))\n        ) |&gt;\n  group_by(v0300, v0606) |&gt;\n  summarise(tot_peop_weig = sum(v0010), tot_peop = n()) |&gt;\n  rename(dom_id = v0300, raca_cor = v0606) |&gt;\n  mutate(prop_race_dom = tot_peop_weig/sum(tot_peop_weig))\n\n`summarise()` has grouped output by 'v0300'. You can override using the\n`.groups` argument.\n\n## Create a graphic for the race distribution\n### Parameters to reuse\ntitle_grap =  \"Distribuição de pessoas por cor ou raça\"\nsubtitle_grap =  \"São Paulo, 2010\"\ndata_orig_grap = \"IBGE, Censo 2010\"\nap_sel &lt;- c(3550308005001, 3550308005007, 3550308005008)\n\n### Municipality\nrace_mun_graph &lt;- race_by_mun_2010 |&gt;\n  ggplot(aes(x = fct_reorder(raca_cor, tot_peop_weig, .desc = T), y = tot_peop_weig, fill = raca_cor)) +\n    geom_col(show.legend = F) +\n    geom_text(aes(\n      label = round(tot_peop_weig)),\n      vjust = - 0.5,\n      hjust = 0.5,\n      size = 4,\n      fontface = \"bold\",\n      # colour = \"#3b3938\"\n      ) +\n    geom_text(aes(\n      label = str_c(\"(\", round(prop_race*100, 2), \"%)\")),\n      vjust = 1.25,\n      hjust = 0.5,\n      size = 3.5) +\n    labs(title = title_grap,\n       subtitle = subtitle_grap,\n       caption = data_orig_grap,\n       # x = \"(Cor ou raça)\",\n       # y = \"(Número de pessoas)\"\n       )  +\n  scale_fill_manual(values = c(\"yellow\", \"#f7efeb\", \"lightgrey\", \"#bf812d\", \"#8c510a\", \"#5e3814\")) +\n  scale_y_continuous(breaks = c(0, 2000000, 4000000, 6000000),\n                    labels = c(\"0\", \"2 Mi\", \"4 Mi\", \"6 Mi\")) +\n  # scale_fill_viridis_d(direction = 1) +\n  theme_classic(base_size = 14) +\n  theme(\n    axis.ticks.x = element_blank(),\n    # axis.text.x = element_blank(),\n    axis.ticks.y = element_blank(),\n    # axis.text.y = element_blank(),\n    axis.title = element_blank() # element_text(colour = \"grey\", size = 7.5))  \n    )\n# + coord_flip()\n\n# ggsave(filename = str_c(\"race_mun_sp_\", census_year, \"_grafv.jpeg\"), plot = race_mun_graph1, path = here(file.path(census_year, \"Gerados\", \"Imagens\")), dpi = 300, width = 25, height = 17.5, units = \"cm\")\n\n### WEIGHTING AREAS SELECTED\nrace_ap_graph &lt;- race_by_ap_2010_sel |&gt;\n  # Create a variable to label the facets\n  mutate(ap_label = case_when(\n    ap == ap_sel[1] ~ str_c(ap_sel[1], \" (Sé)\"),\n    ap == ap_sel[2] ~ str_c(ap_sel[2], \" (Liberdade)\"),\n    ap == ap_sel[3] ~ str_c(ap_sel[3], \" (Liberdade)\"))) |&gt;\n  ggplot(aes(x = fct_reorder(raca_cor, tot_peop_weig, .desc = T), y = tot_peop_weig, fill = raca_cor)) +\n    geom_col(show.legend = F) +\n    geom_text(aes(\n      label = round(tot_peop_weig)),\n      vjust = - 0.5,\n      hjust = 0.5,\n      size = 3.75,\n      fontface = \"bold\",\n      # colour = \"#3b3938\"\n      ) +\n    geom_text(aes(\n      label = str_c(\"(\", round(prop_race*100, 2), \"%)\")),\n      vjust = 1.25,\n      hjust = 0.5,\n      size = 3) +\n    labs(title = title_grap,\n       subtitle = subtitle_grap,\n       caption = data_orig_grap,\n       # x = \"(Cor ou raça)\",\n       # y = \"(Número de pessoas)\"\n       )  +\n  scale_fill_manual(values = c(\"yellow\", \"#f7efeb\", \"lightgrey\", \"#bf812d\", \"#8c510a\", \"#5e3814\")) +\n  # scale_fill_viridis_d(direction = 1) +\n  theme_classic(base_size = 14) +\n  theme(\n    # axis.ticks.x = element_blank(),\n    axis.text.x = element_blank(),\n    # axis.ticks.y = element_blank(),\n    # axis.text.y = element_blank(),\n    axis.title = element_blank() # element_text(colour = \"grey\", size = 7.5))  \n    ) +\n  facet_wrap(vars(ap_label)) +\n  coord_flip()\n\n# ggsave(filename = str_c(\"race_mun_sp_ap_\", census_year, \"_grafv.jpeg\"), plot = race_ap_graph, path = here(file.path(census_year, \"Gerados\", \"Imagens\")), dpi = 300, width = 25, height = 17.5, units = \"cm\")\nrace_ap_graph"
  },
  {
    "objectID": "blog/first-post/index.html",
    "href": "blog/first-post/index.html",
    "title": "First Post",
    "section": "",
    "text": "Sed risus ultricies tristique nulla aliquet. Neque volutpat ac tincidunt vitae semper quis lectus nulla.\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Enim sed faucibus turpis in eu mi bibendum neque. Ac orci phasellus egestas tellus rutrum tellus pellentesque eu. Velit sed ullamcorper morbi tincidunt ornare massa. Sagittis id consectetur purus ut faucibus pulvinar elementum integer. Tincidunt nunc pulvinar sapien et ligula ullamcorper malesuada proin libero. Lobortis feugiat vivamus at augue eget arcu. Aliquam ut porttitor leo a diam sollicitudin tempor id eu. Mauris a diam maecenas sed enim ut sem viverra aliquet. Enim ut tellus elementum sagittis vitae et leo duis. Molestie at elementum eu facilisis sed odio morbi quis commodo. Sapien pellentesque habitant morbi tristique senectus. Quam vulputate dignissim suspendisse in est. Nulla pellentesque dignissim enim sit amet venenatis urna cursus eget.\nVelit aliquet sagittis id consectetur purus ut faucibus pulvinar elementum. Viverra mauris in aliquam sem fringilla ut morbi tincidunt augue. Tortor at auctor urna nunc id. Sit amet consectetur adipiscing elit duis tristique sollicitudin. Aliquet nibh praesent tristique magna sit amet purus. Tristique senectus et netus et malesuada fames ac turpis. Hac habitasse platea dictumst quisque. Auctor neque vitae tempus quam pellentesque nec nam aliquam. Ultrices tincidunt arcu non sodales neque sodales ut etiam. Iaculis at erat pellentesque adipiscing. Cras tincidunt lobortis feugiat vivamus. Nisi est sit amet facilisis magna etiam. Pharetra pharetra massa massa ultricies mi quis hendrerit. Vitae sapien pellentesque habitant morbi tristique senectus. Ornare aenean euismod elementum nisi quis eleifend quam adipiscing vitae."
  },
  {
    "objectID": "blog/third-post/index.html",
    "href": "blog/third-post/index.html",
    "title": "Third Blog Post",
    "section": "",
    "text": "The source for any page in your website could also be a Jupyter Notebook. This one is third-post/index.ipynb.\nHere’s an example I borrowed from the Seaborn docs:\n\nimport seaborn as sns\n\nsns.set_theme(style=\"whitegrid\")\n\n# Load the diamonds dataset\ndiamonds = sns.load_dataset(\"diamonds\")\n\n# Plot the distribution of clarity ratings, conditional on carat\nsns.displot(\n    data=diamonds,\n    x=\"carat\", hue=\"cut\",\n    kind=\"kde\", height=4, aspect=1.5,\n    multiple=\"fill\", clip=(0, None),\n    palette=\"ch:rot=-.25,hue=1,light=.75\",   \n)"
  },
  {
    "objectID": "labhab.html",
    "href": "labhab.html",
    "title": "O surgimento do LabHab",
    "section": "",
    "text": "O surgimento do LabHab\nCriado em novembro de 1996, no Departamento de Projeto da Faculdade de Arquitetura e Urbanismo e de Design (FAU-USP), o Laboratório de Habitação e Assentamentos Humanos (LabHab) iniciou suas atividades em março de 1997, com o propósito de integrar ensino, pesquisa e extensão universitária para abordar as demandas habitacionais, urbanas e ambientais no contexto da histórica desigualdade social e territorial brasileira. Suas atividades têm um caráter experimental, proporcionando formação e capacitação para análise crítica e ação propositiva.\nO LabHab realiza diversas atividades com o suporte financeiro da própria USP, entidades nacionais e internacionais como FAPESP, FINEP, CNPq, CEF e programas de Cooperação Internacional, como GIZ. Contando com uma equipe regular de professores e estudantes, além de um grupo mais amplo de pesquisadores associados, o Laboratório fomenta debates, seminários temáticos e pesquisas interdisciplinares, incluindo profissionais e estudantes de diversas áreas. Com enfoque interdisciplinar, o LabHab propicia colaborações intradepartamentais e interdepartamentais na FAU-USP, interunidades na USP e em outras instituições nacionais e internacionais, visando cumprir seus objetivos em consonância com as diretrizes da FAU-USP.\n\n\nAtuação\nO LabHab articula ensino, pesquisa e extensão para criar um ambiente acadêmico fundamentado na realidade social. Os projetos desenvolvidos – de assessoria e de pesquisa – estão alinhados com disciplinas ministradas pelo grupo de professores e busca explorar a produção social do espaço urbano abordando temas como financiamento, papel do Estado e do mercado, ATHIS, produção imobiliária, entre outros.\nNo âmbito da pesquisa, o LabHab oferece suporte a trabalhos acadêmicos em diversos níveis, desde TFG e Iniciação Científica até Pós-Doutorado. Na extensão, foca na construção de conhecimento e qualificação de diversos atores, promovendo o direito à cidade e à moradia, orientada pela construção conjunta de conhecimento.\nO LabHab está comprometido com a formação de novos profissionais para lidar com os desafios urbanos no Brasil e na América Latina, onde a maior parte do espaço é produzida sem intervenção profissional. Reconhecendo a importância da extensão como pesquisa e prática de aprendizado, o LabHab colabora com instituições similares no país e no exterior, implementando diversas formas de trabalho, incluindo pesquisa, seminários, oficinas e assessoria a planos e projetos associados à capacitação.\n\n\nProdutos\nA partir das atividades realizadas pelo LabHab, diferentes tipos de produtos vêm sendo gerados ao longo do tempo. Visando a geração de subsídios para embasar e estimular a criação, o monitoramento e o aperfeiçoamento das políticas públicas, relatórios, seminários, cursos de capacitação e debates são alguns dos exemplos. Os produtos estão disponíveis na sede do laboratório, em seu website e na biblioteca da FAU-USP.\nDestaque-se, ainda, que a geração e a disponibilização desses produtos também servem como fundamento para a ação imediata de associações de moradores, movimentos sociais e funcionários públicos, para além de fomentar um importante e necessário espaço de aprendizado para estudantes de graduação e pós-graduação. Dessa forma, o LabHab busca reunir agentes públicos, sociedade civil organizada, pesquisadores e militantes em prol da justiça socioambiental, em um processo de contínuo aprimoramento e desenvolvimento, sendo um espaço de aprendizado para todos ao longo de seus mais de 25 anos de atividades.\nConheça alguns dos produtos na biblioteca do laboratório."
  },
  {
    "objectID": "tips_org.html",
    "href": "tips_org.html",
    "title": "Working with GIT",
    "section": "",
    "text": "git remote add origin https://github.com/jacovine/site_inct\ngit branch -M main\ngit add –all\ngit commit -m “initial commit”\ngit push -u origin main"
  },
  {
    "objectID": "tips_org.html#nd-way",
    "href": "tips_org.html#nd-way",
    "title": "Working with GIT",
    "section": "2nd WAY",
    "text": "2nd WAY"
  },
  {
    "objectID": "tips_org.html#find-your-currentworking-directory",
    "href": "tips_org.html#find-your-currentworking-directory",
    "title": "Working with GIT",
    "section": "Find your current/working directory",
    "text": "Find your current/working directory\n\nhere::here(): Gives the same results of getwd()"
  },
  {
    "objectID": "tips_org.html#see-your-files",
    "href": "tips_org.html#see-your-files",
    "title": "Working with GIT",
    "section": "See your files:",
    "text": "See your files:\n\nlist.files(): This command shows all the files in a directory. Default: your working directory. To see the contents of a different directory, pass the direction to the path argument. Too list more than one file, use pattern argument"
  },
  {
    "objectID": "tips_org.html#create-a-new-file",
    "href": "tips_org.html#create-a-new-file",
    "title": "Working with GIT",
    "section": "Create a new file:",
    "text": "Create a new file:\n\nfile.create(“dir_path/file_name.txt”): Used to create a blank/empty file"
  },
  {
    "objectID": "tips_org.html#create-new-directories",
    "href": "tips_org.html#create-new-directories",
    "title": "Working with GIT",
    "section": "Create new directories:",
    "text": "Create new directories:\n\ndir.create(“new_dir_name”): Give the name of the new directory. If you want the new directory outside of your working directory (default), pass the path before the new directory name."
  },
  {
    "objectID": "tips_org.html#move-your-files",
    "href": "tips_org.html#move-your-files",
    "title": "Working with GIT",
    "section": "Move your files",
    "text": "Move your files\n\n1st way\n\nfile.rename(from = “file_to_move.example”, to = “dir_path/file_to_move.example”): Pass the name of the file you want in the first argument (from), followed by the new folder path in the second argument (to) with your file name.\n\n\n\n2nd way (2 steps)\n\nfile.copy(from = “file_to_move.example”, to = “dir_path/”): Copy the file to the new directory;\nfile.remove(“file_to_move.example”): Remove the file moved.\n\nOBS.1: the argument “pattern” of list.files function allows to select more than one file at once and reuse it to copy the selected files to new directory;\nOBS.2: the downside of moving and deleting files like this is that Git lost the track/history of the files moved."
  },
  {
    "objectID": "tips_org.html#rd-way",
    "href": "tips_org.html#rd-way",
    "title": "Working with GIT",
    "section": "3rd WAY",
    "text": "3rd WAY"
  },
  {
    "objectID": "blog/04-post/Raca_cor_sp.html#analisando-os-dados-avançando-no-entendimento-sobre-a-distribuição-da-raçacor-nas-diferentes-partes-do-território-municipal-áreas-de-ponderação",
    "href": "blog/04-post/Raca_cor_sp.html#analisando-os-dados-avançando-no-entendimento-sobre-a-distribuição-da-raçacor-nas-diferentes-partes-do-território-municipal-áreas-de-ponderação",
    "title": "Raça ou cor em São Paulo - uma leitura a partir dos microdados censitários",
    "section": "",
    "text": "De forma a aprofundar o conhecimento sobre a área de interesse aqui tratada (região da Liberdade), a seguir será explorada a distribuição da raça/cor por área de ponderação. Ao revisitar a temática em uma escala mais detalhada, comparações entre regiões tornam-se possíveis, com novos subsídios e/ou padrões podendo ser revelados (para o município e para a área de interesse).\nA seguir, o código gera a distribuição da população por raça/cor para cada uma das áreas de ponderação do município de São Paulo.\n\n# Compute the RACE distribution by AP\nrace_by_ap_2010 &lt;- micro_pop |&gt;\n  mutate(v0606 = factor(v0606),\n         v0011 = factor(v0011)\n         ) |&gt;\n  group_by(v0011, v0606, .drop = FALSE) |&gt; \n  summarise(tot_peop_peso = sum(v0010), tot_peop = n()) |&gt;\n  mutate(prop_race = 100*tot_peop_peso/sum(tot_peop_peso),\n         raca_cor_nome = factor(case_when(\n           v0606 == 1 ~ \"Branca\",\n           v0606 == 2 ~ \"Preta\",\n           v0606 == 3 ~ \"Amarela\",\n           v0606 == 4 ~ \"Parda\",\n           v0606 == 5 ~ \"Indígena\",\n           v0606 == 9 ~ \"Ignorado\"))\n         ) |&gt; \n  relocate(ap = v0011, raca_cor = v0606, raca_cor_nome) \n\n`summarise()` has grouped output by 'v0011'. You can override using the\n`.groups` argument.\n\n# Show the result\nrace_by_ap_2010\n\n# A tibble: 1,860 × 6\n# Groups:   ap [310]\n   ap            raca_cor raca_cor_nome tot_peop_peso tot_peop prop_race\n   &lt;fct&gt;         &lt;fct&gt;    &lt;fct&gt;                 &lt;dbl&gt;    &lt;int&gt;     &lt;dbl&gt;\n 1 3550308005001 1        Branca               13619.      710     57.6 \n 2 3550308005001 2        Preta                  978.       49      4.14\n 3 3550308005001 3        Amarela               1921.       95      8.12\n 4 3550308005001 4        Parda                 7133.      359     30.2 \n 5 3550308005001 5        Indígena                 0         0      0   \n 6 3550308005001 9        Ignorado                 0         0      0   \n 7 3550308005002 1        Branca               15653.      764     69.9 \n 8 3550308005002 2        Preta                 1360.       62      6.07\n 9 3550308005002 3        Amarela                588.       26      2.63\n10 3550308005002 4        Parda                 4786.      240     21.4 \n# ℹ 1,850 more rows\n\n\nO resultado produzido está no que se costuma chamar de base ou tabela de forma longa. Mais adequada para a manipulação de dados, percebe-se que para cada área de ponderação são apresentadas todas as categorias da variável raça/cor, dispostas verticalmente, bem como os seus valores. Tomando-se como exemplo a primeira área de ponderação, 3550308005001, verifica-se que a primeira linha é destinada à raça branca, a segunda à preta, a terceira à amarela e assim por diante. Essa disposição é, então, retomada quando se inicia a segunda área de ponderação, 3550308005002, com a linha sete apresentando os dados para a raça branca, a linha oito para a raça preta, etc. Tal forma, saliente-se, nem sempre facilita a visualização e o entendimento do que se quer investigar.\nTendo isso em vista, a seguir os mesmos dados serão apresentados a partir da chamada forma longa. Como poderá ser visto, dessa vez cada área de ponderação ocupa apenas uma linha da tabela. As categorias da variável raça/cor, por sua vez, são transpostas para as colunas.\n\n# Transpose the data into a wider table   \n1race_by_ap_2010_wider &lt;- race_by_ap_2010 |&gt;\n2  pivot_wider(id_cols = ap, names_from = raca_cor, values_from = c(tot_peop_peso, prop_race)) |&gt;\n3  set_names(\"ap\", \"branca\", \"preta\", \"amarela\", \"parda\", \"indigena\", \"ignorado\", \"branca_prop\",  \"preta_prop\", \"amarela_prop\", 'parda_prop',  \"indigena_prop\", \"ignorado_prop\") |&gt;\n4  relocate(\"ap\", \"branca\",  \"parda\", \"preta\", \"amarela\", \"indigena\", \"ignorado\", \"branca_prop\", 'parda_prop',  \"preta_prop\", \"amarela_prop\",  \"indigena_prop\", \"ignorado_prop\") |&gt;\n5  ungroup() |&gt;\n6  mutate(tot_pop = branca + parda + preta + amarela + indigena + ignorado)\n\n\n# See the first version of the wider table\n7race_by_ap_2010_wider\n\n# Look only to the number of people (absolute values) by AP and race\n8head(race_by_ap_2010_wider[c(1:7, 14)], n = 10) |&gt;\n  mutate(across(.cols = !ap, .fns = round)) |&gt; \n  rename(Branca = branca, Parda = parda, Preta = preta, Amarela = amarela, `Indígena` = indigena, Ignorado = ignorado, Total = tot_pop) |&gt; \n  gt(rowname_col = \"ap\")\n\n# Now consider only the proportion of people (relative values) by AP and race\n9head(race_by_ap_2010_wider[c(1, 8:14)], n = 10) |&gt;\n  rename(`Branca (%)` = branca_prop, `Parda (%)` = parda_prop, `Preta (%)` = preta_prop, `Amarela (%)` = amarela_prop, `Indígena (%)` = indigena_prop, `Ignorado (%)` = ignorado_prop, Total = tot_pop) |&gt;\n  gt(rowname_col = \"ap\")\n  \n# write_csv2(race_by_ap_2010_wider, file = here(file.path(\"2010\", \"Gerados\", \"Tabelas\", \"raca_ap_sp_2010.csv\")))\n\n\n1\n\nSelecione a base e crie um objeto para salvar os dados em formato longo;\n\n2\n\nTransforme as categorias da variável raça/cor, originalmente empilhadas, em colunas;\n\n3\n\nAdote novos nomes (mais intuitivos) para as colunas;\n\n4\n\nMude a ordem das colunas;\n\n5\n\nDesagrupe os dados;\n\n6\n\nCrie uma coluna e compute a população total das AP (soma de todas as raças mais os casos “ignorado”);\n\n7\n\nObserve os dados dispostos na nova forma e note que a base apresenta tanto os dados absolutos quanto os relativos;\n\n8\n\nObserve os resultados para as dez primeiras áreas de ponderação, considerando apenas o número de pessoas (volume) para cada cor/raça (perceba o arredondamento dos valores praticado), e,\n\n9\n\nObserve os resultados para as dez primeiras áreas de ponderação, mas agora considerando apenas a proporção de pessoas para cada cor/raça.\n\n\n\n\n# A tibble: 310 × 14\n   ap        branca parda preta amarela indigena ignorado branca_prop parda_prop\n   &lt;fct&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt;      &lt;dbl&gt;\n 1 35503080… 13619. 7133.  978.   1921.      0          0        57.6       30.2\n 2 35503080… 15653. 4786. 1360.    588.      0          0        69.9       21.4\n 3 35503080… 22803. 8443. 1531.   1644.    171.         0        65.9       24.4\n 4 35503080… 17379. 8837. 1622.   5675.    379.         0        51.3       26.1\n 5 35503080… 18996. 8334. 1049.    829.     56.5        0        64.9       28.5\n 6 35503080… 27442. 6309. 1212.   1962.     22.7        0        74.3       17.1\n 7 35503080… 28848. 4790. 1045.   5697.     20.0        0        71.4       11.9\n 8 35503080… 16871. 4180.  676.   6940.     25.4        0        58.8       14.6\n 9 35503080… 13897. 3394.  680.    610.     25.3        0        74.7       18.2\n10 35503080… 22012. 4791. 1412.   2564.      0          0        71.5       15.6\n# ℹ 300 more rows\n# ℹ 5 more variables: preta_prop &lt;dbl&gt;, amarela_prop &lt;dbl&gt;,\n#   indigena_prop &lt;dbl&gt;, ignorado_prop &lt;dbl&gt;, tot_pop &lt;dbl&gt;\n\n\n\n\n\n\n\n\n\nBranca\nParda\nPreta\nAmarela\nIndígena\nIgnorado\nTotal\n\n\n\n\n3550308005001\n13619\n7133\n978\n1921\n0\n0\n23651\n\n\n3550308005002\n15653\n4786\n1360\n588\n0\n0\n22388\n\n\n3550308005003\n22803\n8443\n1531\n1644\n171\n0\n34593\n\n\n3550308005004\n17379\n8837\n1622\n5675\n379\n0\n33892\n\n\n3550308005005\n18996\n8334\n1049\n829\n57\n0\n29265\n\n\n3550308005006\n27442\n6309\n1212\n1962\n23\n0\n36948\n\n\n3550308005007\n28848\n4790\n1045\n5697\n20\n0\n40400\n\n\n3550308005008\n16871\n4180\n676\n6940\n25\n0\n28692\n\n\n3550308005009\n13897\n3394\n680\n610\n25\n0\n18606\n\n\n3550308005010\n22012\n4791\n1412\n2564\n0\n0\n30780\n\n\n\n\n\n\n\n\n\n\n\n\nBranca (%)\nParda (%)\nPreta (%)\nAmarela (%)\nIndígena (%)\nIgnorado (%)\nTotal\n\n\n\n\n3550308005001\n57.584\n30.160\n4.1356\n8.1202\n0.000000\n0\n23651\n\n\n3550308005002\n69.919\n21.378\n6.0749\n2.6286\n0.000000\n0\n22388\n\n\n3550308005003\n65.917\n24.407\n4.4265\n4.7538\n0.495077\n0\n34593\n\n\n3550308005004\n51.278\n26.075\n4.7846\n16.7437\n1.118900\n0\n33892\n\n\n3550308005005\n64.910\n28.479\n3.5859\n2.8323\n0.193212\n0\n29265\n\n\n3550308005006\n74.273\n17.075\n3.2793\n5.3109\n0.061323\n0\n36948\n\n\n3550308005007\n71.406\n11.857\n2.5855\n14.1019\n0.049623\n0\n40400\n\n\n3550308005008\n58.802\n14.567\n2.3558\n24.1863\n0.088484\n0\n28692\n\n\n3550308005009\n74.692\n18.239\n3.6551\n3.2777\n0.136077\n0\n18606\n\n\n3550308005010\n71.515\n15.566\n4.5888\n8.3301\n0.000000\n0\n30780\n\n\n\n\n\n\n\nA partir das últimas tabelas, que apresetam os valores absolutos (número total/volume/montante de pessoas) e relativos (proporção de pessoas), verifica-se uma disposição dos dados mais amigável. Um desafio persiste, porém: o município de São Paulo é composto por 310 áreas de ponderação. Ou seja, a tabela é constituída por 310 linhas, tornando a apreensão do todo difícil.\nEm situações desse tipo, com bases de dados extensas, usualmente recorre-se a estratégias para sintetizá-los e explicitar eventuais padrões. Uma delas, inclusive, já foi explorada: o uso de ferramentas baseadas em visualização de dados, como os gráficos. A ela, some-se a geração de medidas síntese de localização, tal qual a famigerada média, e de dispersão, dentre as quais pode ser citado o desvio padrão.\nA seguir, dois tipos de gráficos (“pontos” e”boxplot + violino”) e uma tabela (composta por medidas de resumo) serão apresentados. Mais do que replicar as mesmas informações em formatos distintos, o que se espera é que eles se complementem e possibilitem uma leitura mais rica e acurada.\nIniciando a exploração com os gráficos, forma mais intuitiva, almeja-se verificar se alguns indícios ou padrões revelam-se a partir de uma análise visual. A partir das intuições encontradas e/ou questionamentos levantados (lembre-se: os questionamentos são a base da ciência!), em um segundo momento serão computados elementos “mais precisos” (estatísticas) para uma melhor descrição e caracterização da distribuição espacial da raça/cor, agregados em formato de tabela.\n\n# Create a graphic representing the race distribution with a dot plot (here, some noise is added)\ngraf_race_ap_2010_pnt0 &lt;- race_by_ap_2010 |&gt;\n  ggplot(aes(x = fct_rev(fct_reorder(raca_cor_nome, tot_peop_peso, median)), y = tot_peop_peso)) +\n    geom_point(alpha = 0.4, shape = 1) + \n    labs(x = NULL,\n         y = NULL) +\n    theme_classic(base_size = 14) +\n    theme(\n      # axis.ticks.x = element_blank(),\n      axis.ticks.y = element_blank()) +\n  coord_flip()\n\n\n# Create a graphic representing the race distribution with a dot plot\n1graf_race_ap_2010_pnt &lt;- race_by_ap_2010 |&gt;\n2  ggplot(aes(x = fct_rev(fct_reorder(raca_cor_nome, tot_peop_peso, median)), y = tot_peop_peso)) +\n3    geom_point(position = 'jitter', alpha = 0.4, shape = 1) +\n    labs(x = NULL,\n4         y = NULL) +\n5    theme_classic(base_size = 14) +\n    theme(\n      # axis.ticks.x = element_blank(),\n      axis.ticks.y = element_blank()) +\n6  coord_flip()\n\n# Create a graphic representing the race distribution with a violin and boxplot\ngraf_race_ap_2010_res &lt;- race_by_ap_2010 |&gt;\n  ggplot(aes(x = fct_rev(fct_reorder(raca_cor_nome, tot_peop_peso, median)), y = tot_peop_peso)) +\n    geom_boxplot() +\n    geom_violin(scale = \"width\", fill = NA, color = \"darkorange\", alpha = 0.7) +\n    labs(x = NULL,\n         y = NULL) +\n    theme_classic(base_size = 14) +\n    theme(\n      # axis.ticks.x = element_blank(),\n      axis.ticks.y = element_blank()) +\n  coord_flip()\n    \n\n# Plot and compare both graphics\n7(graf_race_ap_2010_pnt0 / graf_race_ap_2010_pnt / graf_race_ap_2010_res)\n\n\n1\n\nSelecione a base de dados e crie um objeto para salvar o gráfico;\n\n2\n\nDefina quais serão as variáveis que aparecerão no gráfico;\n\n3\n\nEscolha o tipo de gráfico/representação dos dados. Note: nos dois primeiros casos, gera-se um gráfico de pontos, com os dados do segundo levemente deslocados. Já no segundo apresenta-se uma sobreposição entre o gráfico de violino e boxplot;\n\n4\n\nExclua o nome dos eixos dos gráficos;\n\n5\n\nDefina alguns elementos visuais do gráfico, como o tamanho das letras, a cor do fundo e a exclusão dos pequenos traços que ligam os valores aos eixos;\n\n6\n\nInverta o eixo dos gráficos, e,\n\n7\n\nDefina a ordem em que os gráficos serão dispostos.\n\n\n\n\n\n\n\n\n\n\n\nComo pode ser visto, três gráficos são apresentados. Note-se, contudo, que tanto o primeiro quanto o segundo tratam de um mesmo tipo de representação (gráfico de pontos). Neles, os pontos indicam qual é a população total de cada uma das áreas de ponderação por raça/cor - a diferença, aqui explorada para fins didáticos, reside no fato do segundo gráfico apresentar dados ligeiramente deslocados de seu valor real, uma técnica usada para facilitar a análise e a apreensão de padrões.\nObervando-se a localização dos pontos, verifica-se, por exemplo, que enquanto as populações preta, indígena e amarela apresentam valores mais concentrados (maior número de pontos próximos e/ou sobrepostos, reforçando a cor preta), no caso das populações pardas e branca o total de pessoas nas áreas de ponderação está mais disperso (há uma maior variabilidade).\nConsiderando-se essa mesma separação, é seguro afirmar que todas as áreas de ponderação do município de São Paulo (ponto preto) possuem menos de 10.000 habitantes pretos, indígenas ou amarelos - limiar ultrapassado pelos residentes brancos e pardos em várias áreas de ponderaçao. Também é possível notar que, diferentemente de todas as outras populações, as áreas de ponderação com o menor número de pessoas brancas somam cerca de 10.000 pessoas - exceção feita a dois casos.\nO segundo gráfico, composto pela sobreposição entre o gráfico de violino (linha laranja) e o boxplot , busca representar a distribuição da população, por raça/cor e áreas de ponderação, de outra forma. Iniciando-se a leitura pelo boxplot, destaque-se que alguns elementos dessa representação costumam ser sempre observados. Um deles é a sua caixa, que perfaz a metade central de todo o conjunto dos dados. Com isso, é possível estimar, por exemplo, que metade da população branca varia entre 16 e 26 mil pessoas, considerando-se a sua distribuição por área de ponderação. Já no caso da população parda esses valores parecem variar entre 5.000 e 15.000 pessoas (não se preocupe com a precisão nesse momento, pois os números corretos serão observados na tabela que produzida a seguir).\nO boxplot fornece, ainda, ao menos duas outras informações interessantes. A primeira diz respeito à linha vertical central da caixa, que indica onde se encontra a mediana. Ordenando-se os totais das populações do menor para o maior valor, a mediana é o valor que divide o conjunto de dados ao meio5. No caso da população preta, por exemplo, esse valor parece estar próximo a 2.500 pessoas.\nA outra informação de interesse está relacionada aos pontos que aparecem para algumas raças/cores. Neste caso, eles indicam as áreas de ponderação cuja população é muito diferente de todo o restante - esses casos são chamados de pontos discrepantes ou outliers. Percebe-se, por exemplo, que a raça amarela possui algumas áreas de ponderação com uma população muito maior do que o comportamento geral dessa raça no município. Já no extremo oposto encontra-se a populaçao preta, que não apresenta nenhuma área de ponderação que foge do comportamento geral dessa raça/cor.\nComplementando os achados do boxplot, novos elementos obtidos por meio do gráfico de violino podem ser acrescentados. Ao representar de forma mais contínua a distribuição das populações por raça/cor e área de ponderação, é possível notar, por exemplo, que a população parda apresenta dois pequenos picos, um logo abaixo de 5.000 pessoas e outro em torno de 14.000 pessoas. As populações preta e branca, por sua vez, parecem apresentar um único pico. Com um olhar um pouco mais treinado, também é possível notar uma ligeira concentração de casos antes da mediana para essas raças/cores - compare o tamanho das caudas do gráfico antes e depois da linha da mediana.\nDe forma a tornar mais precisos os indícios, intuições e questões gerados a partir da visualização dos dados e avançar na busca de novos achados, a seguir serão computadas algumas estatísticas para cada uma das raças. Os resultados, por sua vez, são agrupados em uma mesma tabela.\n\n# Compute some metrics to describe the data\n## Compute the measures by race\n1branca_mtrc &lt;- summary(race_by_ap_2010_wider$branca)\nparda_mtrc &lt;- summary(race_by_ap_2010_wider$parda)\npreta_mtrc &lt;- summary(race_by_ap_2010_wider$preta)\namarela_mtrc &lt;- summary(race_by_ap_2010_wider$amarela)\nindigena_mtrc &lt;- summary(race_by_ap_2010_wider$indigena)\nignorado_mtrc &lt;- summary(race_by_ap_2010_wider$ignorado)\n\n## Create a table with all race metrics\n2tab_race_metrcs_ap &lt;- bind_rows(branca_mtrc, parda_mtrc, preta_mtrc, amarela_mtrc, indigena_mtrc, ignorado_mtrc) |&gt;\n3  as.data.frame() |&gt;\n  mutate(raca_cor = c(\"Branca\", \"Parda\", \"Preta\", \"Amarela\", \"Indigena\", \"Ignorado\"),\n4         across(.cols = !raca_cor, .fns = round)) |&gt;\n5  relocate(raca_cor) |&gt;\n6  set_names(\"Raça ou cor\", \"Menor valor\", \"1o. Quartil\", \"Mediana\", \"Média\", \"3o. Quartil\", \"Maior valor\")\n\ntab_race_metrcs_ap |&gt; \n7  gt(rowname_col = \"Raça ou cor\")\n\n\n1\n\nCompute algumas métricas para cada uma das raças/cores;\n\n2\n\nJunte todas as métricas calculadas (“colando” as linhas);\n\n3\n\nTransforme a junção anterior em um data.frame (“tabela”);\n\n4\n\nAcrescente uma variável para a raça/cor e arredonde os valores da população;\n\n5\n\nColoque a variável raça/cor na primeira posição da base, e,\n\n6\n\nDefina nomes mais intuitivos para as variáveis, e,\n\n7\n\nCrie uma tabela mais visualemente atrativa.|\n\n\n\n\n\n\n\n\n\n\n\nMenor valor\n1o. Quartil\nMediana\nMédia\n3o. Quartil\nMaior valor\n\n\n\n\nBranca\n4160\n17078\n21362\n22010\n26572\n42376\n\n\nParda\n720\n5276\n11051\n11120\n15784\n30592\n\n\nPreta\n82\n1274\n2264\n2314\n3186\n6208\n\n\nAmarela\n19\n238\n494\n807\n941\n6940\n\n\nIndigena\n0\n0\n22\n42\n48\n1005\n\n\nIgnorado\n0\n0\n0\n9\n0\n1231\n\n\n\n\n\n\n\nA partir dos valores da tabela, verifica-se que as percepções obtidas por meio dos gráficos é corroborada pelos números. Um dos achados obtidos visualmente indicava, por exemplo, uma maior concentração dos valores das populações preta, amarela e indígena por área de ponderação - a grosso modo, cria-se a noção de que a distribuição dessas raças ao longo do território era mais parecido (ou menos diferente) do que o encontrado para as raças brancas e parda. Recorrendo-se ao Intervalo Interquaril (IQR) para quantificar esse comportamento6, constata-se que a diferença das populações por área de ponderação para as raças branca e preta é de 9.494 e 10.508 pessoas, respectivamente. Por sua vez, ao se considerar as populações preta, amarela e indígena, essa diferença é de 1.912, 703 e 48 pessoas. Ou seja, mesmo considerando-se a diferença entre a população branca (menor valor do grupo mais disperso, de acordo com o IQR) e a população preta (maior valor do grupo mais concentrado), a dispersão ou variabilidade é cinco vezes maior a favor da raça branca (9.494 pessoas brancas/1.912 pessoas pretas).\nObservando-se as menores quantidades de pessoas por raça/cor presentes nas áreas de ponderação (coluna “Menor valor” da tabela), percebe-se que enquanto existe ao menos uma área de ponderação que não possui indígenas - valor que salta para ao menos 25% das áreas de ponderação, dado que o valor do 1º quartil é 07 -, o menor número de pessoas brancas em uma área de ponderação no município é de 4.160. Esse valor, aliás, é maior do que o encontrado em ao menos 75% de todas as áreas de ponderação para as raças/cores preta, amarela e indígena (observe e compare os dados a partir da coluna do 3º quartil).\nEm sentido oposto, ao se considerarem as maiores quantidades de pessoas por raça/cor e área de ponderação (coluna “Maior valor”), agora é possível mensurar e identificar as áreas que possuem as maiores populações preta (6.208 pessoas), amarela (6.940) e indígena (1.005). Dado que a simples comparação desse valor com o do 3º quartil para cada uma dessas raças/cores indica uma diferença não desprezível, pode-se aventar ou suspeitar que algo ocorreu/ocorre nessas porções do território, fomentando essa concentração espacial.\nOperando-se de forma similar, verifica-se que as estatísticas da tabela especificam as medidas anteriormente obtidas por meio dos gráficos. Dessa forma, as aproximações geradas para os percentis 25º e 75º (medidas limites da caixa do boxplot), bem como para o 50º (mediana), agora são mensuradas e localizadas de forma mais precisa. No caso da população preta, por exemplo, o primeiro, segundo (mediana) e terceiro quartis correspondem a 1.274, 2.264 e 3.186 pessoas. Por sua vez, essas mesmas medidas para a população parda perfazem e 5.276, 11.051 e 11.120 pessoas.\nPara finalizar essa etapa de “contextualização regional”, duas novas estratégias serão rapidamente exploradas. Enquanto a primeira está baseada no tamanho das áreas de ponderação, como um todo (ou seja, considerando todas as raças/cores), a segunda abordará a questão a partir do tamanho da população negra (pessoas pardas + pessoas pretas).\nO código a seguir fornece subsísios para a análise das áreas de ponderação (AP) mais populosas. O objetivo será compreender a composição por raça/cor para as cinco áreas com os maiores números de residentes - o número 5 foi escolhido para tornar a análise mais paupável e inteligível a partir dos dados brutos. Note-se, ainda, que um ranqueamento foi criado para auxiliar a leitura.\n\n# Select only the absolute values and rank all the race categories\n1race_by_ap_2010_wider_pos_abs &lt;- race_by_ap_2010_wider |&gt;\n2  select(!ends_with(\"_prop\")) |&gt;\n3  mutate(branca_rank = min_rank(desc(branca)),\n         parda_rank = min_rank(desc(parda)),\n         preta_rank = min_rank(desc(preta)),\n         amarela_rank = min_rank(desc(amarela)),\n         indigena_rank = min_rank(desc(indigena)),\n         total_rank = min_rank(desc(tot_pop)),\n         across(.cols = !c(ends_with(\"_rank\"), starts_with(\"ap\")), .fns = round)) |&gt;\n4  rename(total = tot_pop) |&gt;\n5  arrange(desc(total))\n\ntab_race_ap5_mean_abs &lt;- race_by_ap_2010_wider_pos_abs |&gt; \n6  slice_head(n = 5)\n\ntab_race_ap5_mean_abs |&gt;\n7  set_names(\"AP\", \"Branca\", \"Parda\", \"Preta\", \"Amarela\", \"Indígena\", \"Ignorado\", \"Total\", \"Branca (Pos)\", \"Parda (Pos)\", \"Preta (Pos)\", \"Amarela (Pos)\", \"Indígena (Pos)\", \"Total (Pos)\") |&gt;\n  mutate(Negra = Parda + Preta) |&gt;\n  relocate(Negra, .after = Preta) |&gt;\n8  gt()\n\n# Select only the proportion values and rank all the race categories\n9race_by_ap_2010_wider_pos_prop &lt;- race_by_ap_2010_wider |&gt;\n  select(ap, ends_with(\"_prop\"), tot_pop) |&gt; \n  # left_join(race_by_ap_2010_wider_pos_abs[c(\"ap\", \"total\")], join_by(ap)) |&gt;\n  # relocate(.after = ignorado_prop, total) |&gt;   \n  mutate(branca_prop_rank = min_rank(desc(branca_prop)),\n         parda_prop_rank = min_rank(desc(parda_prop)),\n         preta_prop_rank = min_rank(desc(preta_prop)),\n         amarela_prop_rank = min_rank(desc(amarela_prop)),\n         indigena_prop_rank = min_rank(desc(indigena_prop)),\n         total_rank = min_rank(desc(tot_pop))) |&gt;\n  rename(total = tot_pop) |&gt; \n  arrange(desc(total))\n\nrace_by_ap_2010_wider_pos_prop |&gt; \n  slice_head(n = 5) |&gt; \n  gt()\n\n\n1\n\nSelecione a base de interesse e crie um objeto para salvar os resultados;\n\n2\n\nSelecione apenas as variáveis que apresentam os totais populacionais por raça/cor (todas aquelas que não terminavam com “_prop”);\n\n3\n\nRanqueie, considerando a população total, as áreas de ponderação (AP) para cada uma das raça/cores ;\n\n4\n\nAdote nomes mais intuitivos para as variáveis;\n\n5\n\nOrdene as AP em função do tamanho de suas populações totais;\n\n6\n\nSelecione as cinco primeiras AP (mais populosas);\n\n7\n\nDefina nomes de variáveis mais intuitivas;\n\n8\n\nGere uma tabela mais visualmente atrativa, e,\n\n9\n\nRepita o mesmo procedimento, mas agora considerando as proporções populacionais por raça/cor e área de ponderação.\n\n\n\n\n\n\n\n\n\n\nAP\nBranca\nParda\nPreta\nNegra\nAmarela\nIndígena\nIgnorado\nTotal\nBranca (Pos)\nParda (Pos)\nPreta (Pos)\nAmarela (Pos)\nIndígena (Pos)\nTotal (Pos)\n\n\n\n\n3550308005259\n23107\n28449\n5200\n33649\n233\n0\n0\n56989\n127\n2\n5\n236\n201\n1\n\n\n3550308005189\n24431\n24757\n6208\n30965\n219\n124\n0\n55739\n99\n3\n1\n242\n22\n2\n\n\n3550308005280\n25903\n23058\n4934\n27992\n157\n39\n1231\n55321\n86\n10\n8\n273\n100\n3\n\n\n3550308005135\n25197\n24448\n4172\n28620\n206\n101\n0\n54124\n91\n4\n24\n246\n32\n4\n\n\n3550308005237\n28194\n20455\n3783\n24238\n856\n79\n0\n53366\n53\n33\n44\n93\n43\n5\n\n\n\n\n\n\n\n\n\n\n\nap\nbranca_prop\nparda_prop\npreta_prop\namarela_prop\nindigena_prop\nignorado_prop\ntotal\nbranca_prop_rank\nparda_prop_rank\npreta_prop_rank\namarela_prop_rank\nindigena_prop_rank\ntotal_rank\n\n\n\n\n3550308005259\n40.546\n49.920\n9.1242\n0.40968\n0.000000\n0.000\n56989\n294\n21\n52\n273\n201\n1\n\n\n3550308005189\n43.831\n44.417\n11.1380\n0.39247\n0.221855\n0.000\n55739\n265\n62\n14\n276\n44\n2\n\n\n3550308005280\n46.822\n41.681\n8.9181\n0.28397\n0.069949\n2.225\n55321\n237\n84\n57\n298\n139\n3\n\n\n3550308005135\n46.554\n45.170\n7.7080\n0.38137\n0.187363\n0.000\n54124\n242\n58\n92\n280\n58\n4\n\n\n3550308005237\n52.831\n38.329\n7.0879\n1.60389\n0.148234\n0.000\n53366\n199\n111\n119\n132\n71\n5\n\n\n\n\n\n\n\nA partir dos dados gerados, verifica-se que as cinco áreas de ponderação (AP) mais populosas do município de São Paulo variam de 56.989 a 53.366 pessoas (com uma média de 55.108 pessoas). Tal qual ocorre no município, as raças branca e parda concentram os maiores quantitativos de pessoas (para o município, cerca de 61% e 31%), sendo seguidas mais de longe pela pessoas pretas, amarelas e indígenas.\nRessalte-se, contudo, que a distância encontrada nesses casos é bem menor. Computando-se duas medidas de tendência central, constata-se que os totais médio e mediano de pessoas brancas dessas cinco AP são de 25366 e 25197. Já no caso das pessoas pardas, eles correspondem a 24233 e 25197.\nTambém é possível verificar que nas duas AP com o maior número de residentes do município (3550308005259 e 3550308005189, especificamente) ocorre uma inversão entre as raças/cor branca e parda. Totalizando 49,9% (28.449) e 44,4% (24.747), nelas a população parda supera a branca (a leitura espacial a seguir indicará que essas duas AP estão localizadas nos distritos do Lajeado, extremo leste do município, e Brasilândia, na Zona Norte).\n\n# Select the five AP with the highest population\n## Get the AP spatial limits\nap_mun_sp &lt;- read_weighting_area(code_weighting = 3550308, year = 2010)\n\nUsing year/date 2010\n\n## Find out the code of the five AP with the highest population from the aspatial data set\ntop_5_ap_abs &lt;- race_by_ap_2010_wider_pos_prop |&gt; \n  slice_head(n = 5) |&gt; \n  pull(ap)\n\n## Filter the 5 AP spatial limits of interest \nap_geo_sel &lt;- ap_mun_sp |&gt; \n  filter(code_weighting %in% top_5_ap_abs) \n\n\n# Get the district spatial limits\ndistrito_mun_sp &lt;- read_neighborhood(year = 2010) |&gt;\n  filter(code_muni == 3550308) |&gt; \n  select(abbrev_state, name_muni, code_district, name_district)\n\nUsing year/date 2010\n\n# See both AP selected and District data together in the space\nmapview(distrito_mun_sp, zcol = \"name_district\", color = \"gray35\", col.regions = \"royalblue\", alpha.regions = 0.4, legend = FALSE) + mapview(ap_geo_sel, zcol = \"code_weighting\", lwd = 2, burst = T)\n\n\n\n\n\n.diferentes estratégias de análise podem ser adotadas. Iniciando-se pelo\nEm seguida, serão selecionadas as áreas de ponderação com a maior população negra."
  }
]